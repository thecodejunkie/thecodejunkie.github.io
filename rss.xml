<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>TheCodeJunkie</title><link>http://thecodejunkie.com/rss.xml</link><description>TheCodeJunkie</description><item><guid isPermaLink="true">http://thecodejunkie.com/2014/10/15/improving-the-editorwindow-class-in-unity/</guid><link>http://thecodejunkie.com/2014/10/15/improving-the-editorwindow-class-in-unity/</link><author>andreas@selfinflicted.org</author><category>Gamedev</category><category>Unity</category><title>Improving the EditorWindow class in Unity</title><description>&lt;p&gt;Extending the Unity editor UI is pretty simple. They have a bunch of classes that you inherit from and the editor will automatically discover and wire them up for you.&lt;/p&gt;

&lt;p&gt;A couple of days ago I started looking into extending the editor with a custom window for some behavior tree work I am doing. I wanted to create a simple tree designer.&lt;/p&gt;

&lt;p&gt;The initial spike went well and I managed to open up a new window, with very little code and no problems, but then I fell into the rabbit hole...&lt;/p&gt;

</description><pubDate>Tue, 14 Oct 2014 22:00:00 Z</pubDate><a10:updated>2014-10-14T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Extending the Unity editor UI is pretty simple. They have a bunch of classes that you inherit from and the editor will automatically discover and wire them up for you.&lt;/p&gt;

&lt;p&gt;A couple of days ago I started looking into extending the editor with a custom window for some behavior tree work I am doing. I wanted to create a simple tree designer.&lt;/p&gt;

&lt;p&gt;The initial spike went well and I managed to open up a new window, with very little code and no problems, but then I fell into the rabbit hole...&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Creating a simple editor window&lt;/h2&gt;

&lt;p&gt;To create a custom window, in the Unity editor, all you have to do is inherit from a class called &lt;code&gt;EditorWindow&lt;/code&gt; and provide a static &lt;code&gt;Init&lt;/code&gt;-method.&lt;/p&gt;

&lt;p&gt;The purpose of the &lt;code&gt;Init&lt;/code&gt;-method is to provide a "factory"-like method that Unity can use to create an instance of your editor window. &lt;/p&gt;

&lt;p&gt;The code below created a blank editor window and tells Unity to add a menu item, called &lt;em&gt;MyEditorWindow&lt;/em&gt; in the &lt;em&gt;Window&lt;/em&gt; menu.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class MyEditorWindow : EditorWindow
{
    [MenuItem("Window/MyEditorWindow")]
    public static void Init()
    {
        var window =
            EditorWindow.GetWindow&amp;lt;MyEditorWindow&amp;gt;();

        // Prevent the window from being destroyed when a new
        // scene is loaded into the editor.
        Object.DontDestroyOnLoad(window);
    }

    private void OnGUI()
    {
        // Put your code here
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looks simple right? The &lt;code&gt;OnGUI&lt;/code&gt; method has a dark secret. It does not really communicate its full intent and it violates the &lt;a href="http://en.wikipedia.org/wiki/Single_responsibility_principle"&gt;Single Responsibility Principle&lt;/a&gt; &lt;em&gt;*gasp*&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;More than meets the eye&lt;/h2&gt;

&lt;p&gt;As you saw, in our previous code sample, we are supposed to put our editor GUI code in the &lt;code&gt;OnGUI&lt;/code&gt;-method. If we check the documentation for &lt;a href="http://docs.unity3d.com/ScriptReference/EditorWindow.OnGUI.html"&gt;EditorWindow.OnGUI method&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Implement your own editor GUI here.&lt;br /&gt;
  &lt;strong&gt;Use OnGUI to draw all the controls of your window.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Then we see that we have reason not to believe that this is all there is to it, right? It turns out, that when I started to implement my custom editor window I sometimes got random &lt;code&gt;ArgumentNullException&lt;/code&gt; errors.&lt;br /&gt;
While searching for the cause, I came across something that caught me by surprise; the &lt;code&gt;OnGUI&lt;/code&gt;-method can be called several times, with different intents, by the Unity editor.&lt;/p&gt;

&lt;p&gt;In reality you have to take a look at the &lt;a href="http://docs.unity3d.com/ScriptReference/Event-type.html"&gt;Event.type&lt;/a&gt; property (in reality you are also going to want to make sure that the event was intended for your control and not someone else), to know what kind of pass that the editor is doing when it is calling into your method. The type property return one of the &lt;a href="http://docs.unity3d.com/ScriptReference/EventType.html"&gt;EventType&lt;/a&gt; enum values and, as you can see, you are supposed to handle everything from &lt;em&gt;repaint&lt;/em&gt;, &lt;em&gt;layout&lt;/em&gt;, &lt;em&gt;mouse-events&lt;/em&gt;, &lt;em&gt;keyboard-events&lt;/em&gt; and so on, from inside a single &lt;code&gt;OnGUI&lt;/code&gt;-method.&lt;/p&gt;

&lt;p&gt;Even if you are careful, this is likely to lead to you writing horrible spaghetti code that is riddled with &lt;em&gt;if/else&lt;/em&gt; selections. So not only does the &lt;code&gt;OnGUI&lt;/code&gt;-method (or its associated documentation) express its intent clearly, but it will also write code that quickly will become hard to maintain as the complexity of your editor increase.&lt;/p&gt;

&lt;h2&gt;A stab at a better approach&lt;/h2&gt;

&lt;p&gt;I come from a strong background in software engineering so code structure and quality are two things that are very close to my heart. &lt;/p&gt;

&lt;p&gt;To make it easier for myself to write my editor, I started looking into alternative designs to decrease the complexity of my code and to help increase the maintainability. I also wanted to solve the problem of having code that did not clearly express its intent. I want to run the right code, at the right time, and still have readable code.&lt;/p&gt;

&lt;p&gt;My solution was to inherit from &lt;code&gt;EditorWindow&lt;/code&gt; and provide my own abstraction. The class is very simple. It overrides the &lt;code&gt;OnGUI&lt;/code&gt;-method and use an event map to delegate the call to more appropriate methods. It effectively intercepts calls to &lt;code&gt;OnGUI&lt;/code&gt; and split them up into finer grained, more intent driven` methods, by using an event map.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Using System;
using System. Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEngine;

public abstract class ExtendedEditorWindow : EditorWindow
{
    public Dictionary&amp;lt;EventType, Action&amp;gt; EventMap { get; set; }

    public ExtendedEditorWindow()
    {
        this.EventMap = new Dictionary&amp;lt;EventType, Action&amp;gt;
        {
            { EventType.ContextClick, this.OnContext },
            { EventType.Layout, this.OnLayout },
            { EventType.Repaint, this.OnRepaint },

            { EventType.KeyDown, () =&amp;gt; {
                this.OnKeyDown(new Keyboard(Event.current));
            }},

            { EventType.KeyUp, () =&amp;gt; {
                this.OnKeyUp(new Keyboard(Event.current));
            }},

            { EventType.MouseDown, () =&amp;gt; {
                this.OnMouseDown((MouseButton)Event.current.button, Event.current.mousePosition);
            }},

            { EventType.MouseDrag, () =&amp;gt; {
                this.OnMouseDrag((MouseButton)Event.current.button, Event.current.mousePosition,
                    Event.current.delta);
            }},

            { EventType.MouseMove, () =&amp;gt; {
                this.OnMouseMove(Event.current.mousePosition, Event.current.delta);
            }},

            { EventType.ScrollWheel, () =&amp;gt; {
                this.OnScrollWheel(Event.current.delta);
            }}
        };
    }

    protected virtual void OnGUI()
    {
        var controlId =
            GUIUtility.GetControlID(FocusType.Passive);

        var controlEvent =
            Event.current.GetTypeForControl(controlId);

        if(this.EventMap.ContainsKey(controlEvent))
        {
            this.EventMap[controlEvent].Invoke();
        }
    }

    protected void OnKeyDown(Keyboard keyboard)
    {
    }

    protected void OnKeyUp(Keyboard keyboard)
    {
    }

    protected virtual void OnMouseDown(MouseButton button, Vector2 position)
    {
    }

    protected virtual void OnMouseDrag(MouseButton button, Vector2 position, Vector2 delta)
    {
    }

    protected virtual void OnMouseMove(Vector2 position, Vector2 delta)
    {
    }

    protected virtual void OnContext()
    {
    }

    protected virtual void OnLayout()
    {
    }

    protected virtual void OnRepaint()
    {
    }

    protected virtual void OnScrollWheel(Vector2 delta)
    {
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The class contains a method for each of the &lt;a href="http://docs.unity3d.com/ScriptReference/Event-type.html"&gt;Event.type&lt;/a&gt; values, that I am interested in managing. The mapping between the event type and method is stored in a simple dictionary. The event map is made public so when you inherit from the class, you can add more or override existing mappings.&lt;/p&gt;

&lt;p&gt;The event map also performs a bit of mapping between the raw event and the method that is called to handle it. For instance the various mouse &amp;amp; keyboard related events are all passed to methods along with parameters that have been transformed into easy to use formats, instead of having to read it from the event.&lt;/p&gt;

&lt;p&gt;Also, by making the methods &lt;em&gt;virtual&lt;/em&gt;, instead of &lt;em&gt;abstract&lt;/em&gt;, we only have to override the ones that are interesting to us and ignore the else.&lt;/p&gt;

&lt;p&gt;For the sake of completeness, here is the &lt;code&gt;MouseButton&lt;/code&gt; class&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public enum MouseButton
{
    Left = 0,
    Right = 1,
    Middle = 2
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and the &lt;code&gt;Keyboard&lt;/code&gt; class&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class Keyboard
{

    public Keyboard()
    {   
    }

    public Keyboard(Event evt)
    {
        this.Code = evt.keyCode;
        this.IsAlt = evt.alt;
        this.IsCapsLock = evt.capsLock;
        this.IsControl = evt.control;
        this.IsFunctionKey = evt.functionKey;
        this.IsNumeric = evt.numeric;
        this.IsShift = evt.shift;
        this.Modifiers = evt.modifiers;
    }

    public KeyCode Code { get; set; }

    public bool IsAlt { get; set; }

    public bool IsCapsLock { get; set; }

    public bool IsControl { get; set; }

    public bool IsFunctionKey { get; set; }

    public bool IsNumeric { get; set; }

    public bool IsShift { get; set; }

    public EventModifiers Modifiers { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These are used by &lt;code&gt;ExtendedEditorWindow&lt;/code&gt; to pass in nicely formatted parameters, to the mouse &amp;amp; keyboard related methods.&lt;/p&gt;

&lt;h2&gt;Taking it for a spin&lt;/h2&gt;

&lt;p&gt;Let us revisit the &lt;code&gt;MyEditorWindow&lt;/code&gt; implementation and make it use the new &lt;code&gt;ExtendedEditorWindow&lt;/code&gt;class instead&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class MyEditorWindow : ExtendedEditorWindow
{
    [MenuItem("Window/MyEditorWindow")]
    public static void Init()
    {
        var window =
            EditorWindow.GetWindow&amp;lt;MyEditorWindow&amp;gt;();

        // Prevent the window from being destroyed when a new
        // scene is loaded into the editor.
        Object.DontDestroyOnLoad(window);
    }

    protected override void OnMouseDrag(MouseButton button, Vector2 position, Vector2 delta)
    {
        // Code to handle mouse drag events
    }

    protected override void OnRepaint()
    {
        // Code to handle repaint events
    }

    // Override other methods that you need
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see, the intent of the code is now a lot clearer. You simply put your code in the right kind of methods and all of a sudden you are no longer violating the Single Responsibility Principle and your code will be a lot easier to maintain.&lt;/p&gt;

&lt;p&gt;The source code for &lt;code&gt;ExtendedEditorWindow&lt;/code&gt;, &lt;code&gt;Keyboard&lt;/code&gt; and &lt;code&gt;MouseButton&lt;/code&gt; are made available, under a &lt;a href="http://opensource.org/licenses/MIT"&gt;MIT license&lt;/a&gt;, in the &lt;a href="https://github.com/thecodejunkie/unity.resources"&gt;unity.resources&lt;/a&gt; repository on my &lt;a href="http://github.com/thecodejunkie"&gt;github account&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I accept pull-requests! :P&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/09/27/indie-team-up/</guid><link>http://thecodejunkie.com/2014/09/27/indie-team-up/</link><author>andreas@selfinflicted.org</author><category>Gamedev</category><category>Indie</category><title>Indie Team Up</title><description>&lt;p&gt;We have all been there. We have had one or more awesome project ideas but we knew that it was either too big to tackle on our own, or we were lacking experience in some key areas to make it happen.&lt;/p&gt;

&lt;p&gt;Instinctively we start shopping around for help amonst friends and contacts, but it is still hard to find someone that shares your vision, have the time to help out and that has the skills that are required to pull it off.&lt;/p&gt;

&lt;p&gt;So we tell ourselves that it probably was not such a good idea anyway and move along. Recognise yourself? I sure know I have found myself in that situation more times than I can remember.&lt;/p&gt;

&lt;p&gt;But it does not have to be that way. There are millions of people out there that are feeling the same thing and if we could only find them then we could do amazing things togehter. This is exactly the vision that &lt;a href="http://twitter.com/spazchickens"&gt;Colleen Wilson&lt;/a&gt;, &lt;a href="http://twitter.com/justin35f"&gt;Justin Hammond&lt;/a&gt; and &lt;a href="http://twitter.com/mrdeprey"&gt;Shawn Deprey&lt;/a&gt; have with their &lt;strong&gt;Indie Team Up&lt;/strong&gt; idea.&lt;/p&gt;

&lt;p&gt;I had the oppertunity to catch them on Skype and talk to help about Indie Team Up and their vision for it.&lt;/p&gt;

</description><pubDate>Fri, 26 Sep 2014 22:00:00 Z</pubDate><a10:updated>2014-09-26T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;We have all been there. We have had one or more awesome project ideas but we knew that it was either too big to tackle on our own, or we were lacking experience in some key areas to make it happen.&lt;/p&gt;

&lt;p&gt;Instinctively we start shopping around for help amonst friends and contacts, but it is still hard to find someone that shares your vision, have the time to help out and that has the skills that are required to pull it off.&lt;/p&gt;

&lt;p&gt;So we tell ourselves that it probably was not such a good idea anyway and move along. Recognise yourself? I sure know I have found myself in that situation more times than I can remember.&lt;/p&gt;

&lt;p&gt;But it does not have to be that way. There are millions of people out there that are feeling the same thing and if we could only find them then we could do amazing things togehter. This is exactly the vision that &lt;a href="http://twitter.com/spazchickens"&gt;Colleen Wilson&lt;/a&gt;, &lt;a href="http://twitter.com/justin35f"&gt;Justin Hammond&lt;/a&gt; and &lt;a href="http://twitter.com/mrdeprey"&gt;Shawn Deprey&lt;/a&gt; have with their &lt;strong&gt;Indie Team Up&lt;/strong&gt; idea.&lt;/p&gt;

&lt;p&gt;I had the oppertunity to catch them on Skype and talk to help about Indie Team Up and their vision for it.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Helping you make the right connections&lt;/h2&gt;

&lt;p&gt;Basically, the Indie Team Up concept is very simple. Help connect people with different skillsets, that share the interest in the same kind of projects, so they can create awesome things together.&lt;/p&gt;

&lt;p&gt;How is this done? Currently most of the activity is happening on Twitter, using the &lt;a href="https://twitter.com/search?q=%23indieteamup"&gt;#indieteamup&lt;/a&gt; hashtag. People post request for help, hoping to find the right people to help them out. This has been working great, and still does, but the Indie Team Up team want to take it to the next level by launching a website to help you, without the restriction of being limited by 140 characters.&lt;/p&gt;

&lt;p&gt;Soon they will launch &lt;a href="http://indieteamup.com"&gt;indieteamup.com&lt;/a&gt;, a website that will let people sign-up and add their own project along with a list of what they are looking to get help with. You also add a profile with information on what you are able to help out with. The site will then help match projects and people together - kind of like an internet dating site, but for indie projects.&lt;/p&gt;

&lt;p&gt;Even though Colleen, Justin and Shawn all are involved in the gaming part of the indie movement, they told me that the website will not be exclusive for game projecsts, but will be open for all sorts of indie projects. Yay!&lt;/p&gt;

&lt;p&gt;The idea is that the website will launch, in a private alpha, very shortly, followed by a public beta and then an official launch.&lt;/p&gt;

&lt;p&gt;From what I could tell, they have a very sensible approach to the website and they will be launching with a minimal viable product and add more features in, if and when there is a big enough demand for it. The core product is to connect people and projects.&lt;/p&gt;

&lt;h2&gt;The hashtags of the indie game community&lt;/h2&gt;

&lt;p&gt;I have &lt;a href="http://thecodejunkie.com/2014/04/03/knowabunga-day-pitching-ideas-as-a-way-of-learning"&gt;previously&lt;/a&gt; blogged about how we arranged a day of &lt;a href="http://unity3d.com"&gt;Unity3D&lt;/a&gt; programming where I worked and how I much I enjoy getting into gamedev. So when I had the Indie Team Up people on Skype, I decided to ask them for a couple of good hashtags to monitor on Twitter to find other cool projects and people that are active in that space.&lt;/p&gt;

&lt;p&gt;This is the list that they gave me&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%gamedev"&gt;#gamedev&lt;/a&gt; - Game development in general&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%indiedev"&gt;#indiedev&lt;/a&gt; - Indie development in general&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%23indieteamup"&gt;#indieteamup&lt;/a&gt; - Indie team up requests and oppertunities&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%indiedevhour"&gt;#indiedevhour&lt;/a&gt; - Used every Wednesday between 11am PST and noon as a way for indie devs to share progress of their projects&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%screenshotsaturday"&gt;#screenshotsaturday&lt;/a&gt; - Every saturday people post screenshots of thins from their projects. You get to see some really cool and amazing work being done by fellow indie devs and it is a great way to get some feedback on your own work&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;The podcast version&lt;/h2&gt;

&lt;p&gt;The Indie Team Up people also teamed up with Karyl Gilbertson (http://twitter.com/karyl) to record and publish the &lt;a href="http://indieteamup.podbean.com"&gt;Indie Team Podcast&lt;/a&gt;, a weekly podcast where they talk about things related to the indie movements, what games they have played recently and about their own personal indie game projects.&lt;/p&gt;

&lt;h2&gt;More to come&lt;/h2&gt;

&lt;p&gt;I have recently started a indie game projects myself, together with &lt;a href="http://mat-mcloughlin.net/"&gt;Mat McLoughlin&lt;/a&gt; and we are getting ready to start blogging about it and share some of the progress we have made so far. I will definitly be blogging more about &lt;a href="http://unity3d.com"&gt;Unity3D&lt;/a&gt; and game development in general because of this, so stay tuned!&lt;/p&gt;

&lt;p&gt;HUGE thanks to Colleen, Shawn and Justin for taking the time to chat with me and answer all of my questions!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/06/19/changing-the-way-we-work-on-github/</guid><link>http://thecodejunkie.com/2014/06/19/changing-the-way-we-work-on-github/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><category>Open-Source</category><title>Changing the way we work on GitHub</title><description>&lt;p&gt;Being a distributed team, GitHub is our single most important piece of the puzzle that makes up Nancy. With the recent changes in our governance, we felt we needed to make some changes on how we work on GitHub.&lt;/p&gt;

</description><pubDate>Wed, 18 Jun 2014 22:00:00 Z</pubDate><a10:updated>2014-06-18T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Being a distributed team, GitHub is our single most important piece of the puzzle that makes up Nancy. With the recent changes in our governance, we felt we needed to make some changes on how we work on GitHub.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Cleaning up issues and pull-requests&lt;/h2&gt;

&lt;p&gt;We have a fair amount of open issues and pull-requests. These consist of a mix of ideas that people have, feature requests, feature implementations and other changes.&lt;/p&gt;

&lt;p&gt;Some of these are dated as far back as 12 months or more. This does not mean they are not important to us, or that we have forgotten about them. We have simply kept a couple of them around because we like the ideas, but they have not been a priority for us. Also they usually act as a nice summary of the original authors thoughts on the subject.&lt;/p&gt;

&lt;p&gt;However, we have decided that we're doing to go through all of them and handle them each in the most appropriate way. Simply put, all current issues with either be merged, resolved (which may involve coding) or closed. We hope to get a clean, or almost clean, slate.&lt;/p&gt;

&lt;h2&gt;Better use of milestones&lt;/h2&gt;

&lt;p&gt;We have always used milestones and assigned issues to them. Usually this have meant that things that came in and that we thought we would like to get out soon, we assigned to the next release.&lt;/p&gt;

&lt;p&gt;This often led to more issues on a milestone than we could handle, leaving us to eventually push our a new version with what was done, and move the remaining open issues to the next milestone instead.&lt;/p&gt;

&lt;p&gt;From now own we are only going to assigned issues and pull-requests to a milestone when they are resolved. This means that we will review and pull stuff in and then we will assign them to an issue. We are going to keep the number of open-issues, that are assigned to a milestone, down to a minimum.&lt;/p&gt;

&lt;h2&gt;Cleaning up our labels&lt;/h2&gt;

&lt;p&gt;We used to have about 10 labels. While these were created over the years with the best of intentions, many of them were no longer being used and a couple of them also overlapped a bit.&lt;/p&gt;

&lt;p&gt;So what we did was remove all but four. The ones that we are keeping are &lt;strong&gt;Breaking change&lt;/strong&gt;, &lt;strong&gt;Up for grabs&lt;/strong&gt;, &lt;strong&gt;Bug&lt;/strong&gt; and &lt;strong&gt;Update Documentation&lt;/strong&gt;. &lt;/p&gt;

&lt;p&gt;Hopefully this will make it easier for us to maintain. We might add others if they provide any value, but for now we will be moving forward with these four.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/06/19/nancy-hosting-owin-and-aspnet-vnext/</guid><link>http://thecodejunkie.com/2014/06/19/nancy-hosting-owin-and-aspnet-vnext/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><category>Open-Source</category><title>Nancy hosting, OWIN and ASP.NET vNext</title><description>&lt;p&gt;Nancy has always been disconnected from the underlaying host, enabling you to run Nancy on top of ASP.NET, self-hosted, as part of your WCF service, or embedded pretty much wherever you want.&lt;/p&gt;

&lt;p&gt;We were also the first full framework to adopt OWIN based hosting, through our &lt;a href="https://www.nuget.org/packages/Nancy.Hosting.Owin/"&gt;Nancy.Hosting.Owin&lt;/a&gt; nuget. With the recent 0.23.0 release we moved our &lt;a href="https://github.com/NancyFx/Nancy/pull/1544"&gt;OWIN host&lt;/a&gt; into the core project as a stepping stone.&lt;/p&gt;

</description><pubDate>Wed, 18 Jun 2014 22:00:00 Z</pubDate><a10:updated>2014-06-18T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Nancy has always been disconnected from the underlaying host, enabling you to run Nancy on top of ASP.NET, self-hosted, as part of your WCF service, or embedded pretty much wherever you want.&lt;/p&gt;

&lt;p&gt;We were also the first full framework to adopt OWIN based hosting, through our &lt;a href="https://www.nuget.org/packages/Nancy.Hosting.Owin/"&gt;Nancy.Hosting.Owin&lt;/a&gt; nuget. With the recent 0.23.0 release we moved our &lt;a href="https://github.com/NancyFx/Nancy/pull/1544"&gt;OWIN host&lt;/a&gt; into the core project as a stepping stone.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;All in on OWIN&lt;/h2&gt;

&lt;p&gt;This change was the first step to move all of our hosting on top of OWIN. We are going to update all our existing &lt;strong&gt;Nancy.Hosting.*&lt;/strong&gt; packages to become meta-packages instead of fully fledged host implementations.&lt;/p&gt;

&lt;p&gt;From a consumer point of view there will be no (hopefully) noticable changes, but internally all hosting will be done through OWIN. &lt;/p&gt;

&lt;p&gt;If you have been running your application on, for example, our ASP.NET host, you are going to continue to use it. The difference will be internally, where it will actually will be running on top of the OWIN pipeline. The same goes for the other hosts (the fate of the WCF host is still undecided).&lt;/p&gt;

&lt;p&gt;This will also give us less code to maintain, and there will be less risk of discrepancies between the various hosting options. Win!&lt;/p&gt;

&lt;h2&gt;ASP.NET vNext support&lt;/h2&gt;

&lt;p&gt;We are also fully committed to supporting the next generation of the ASP.NET environment, currently dubbed &lt;a href="http://davidfowl.com/asp-net-vnext-architecture/"&gt;ASP.NET vNext&lt;/a&gt;. This is going to be the web platform for Microsoft as they move forward, and of course Nancy will be there as well!&lt;/p&gt;

&lt;p&gt;In fact, the the release of 0.23.0 we also put in the first bits of code to make this possible. This was made possible by providing a &lt;code&gt;UseNancy&lt;/code&gt; extension method to the new &lt;code&gt;IBuilder&lt;/code&gt; interface, that is used in vNext for configuring the pipeline.&lt;/p&gt;

&lt;p&gt;Jonathan Channon &lt;a href="http://blog.jonathanchannon.com/2014/06/14/nancy-aspnet-vnext-vs2014-azure/"&gt;wrote a post&lt;/a&gt; that contains a short sample of how you can run the 0.23.0 bits on vNext - well worth a read if you want to make sure you stay bleeding edge!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/06/19/nancy-moving-forward/</guid><link>http://thecodejunkie.com/2014/06/19/nancy-moving-forward/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><category>Open-Source</category><title>Nancy moving forward</title><description>&lt;p&gt;Recently we had a meeting that was made up of Me, &lt;a href="http://twitter.com/grumpydev"&gt;Steven&lt;/a&gt; and most of the &lt;a href="http://nancyfx.org/mvm.html"&gt;Most Valued Minions&lt;/a&gt;. On the agenda was everything from discussing the governance of the project, to making plans for a v1, looking over the state of our GitHub repository and much more.&lt;/p&gt;

&lt;p&gt;A lot of ground was covered and the intention of this blog series is to try and get down as much as possible of what we said and decided. We believe in developing in the open, so it is important that we get the information out to our community.&lt;/p&gt;

&lt;p&gt;Please do not hesitate to reach out to us if you have any questions, suggestions and just want to share your thoughts on the subjects!&lt;/p&gt;

&lt;p&gt;Here is a tl;dr of the posts&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most Valued Minions can now commit code&lt;/li&gt;
&lt;li&gt;Cleaned up our labels on GitHub&lt;/li&gt;
&lt;li&gt;Cleaning up all the open issues and pull-requests&lt;/li&gt;
&lt;li&gt;Aiming for to put out a new release every 8-weekish&lt;/li&gt;
&lt;li&gt;Pushing towards a v1 release&lt;/li&gt;
&lt;li&gt;v1 will be a dual-target release, targeting both .net 4.0 and .net 4.5&lt;/li&gt;
&lt;li&gt;Post-v1 we will support .net 4.0 for about 6 months&lt;/li&gt;
&lt;li&gt;We are going to close down our Google group in about 1 month&lt;/li&gt;
&lt;li&gt;We are going all-in on OWIN, bringing it into our core&lt;/li&gt;
&lt;li&gt;We are fully committed to supporting ASP.NET vNext&lt;/li&gt;
&lt;li&gt;We released &lt;a href="http://blog.nancyfx.org"&gt;blog.nancyfx.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy reading!&lt;/p&gt;
</description><pubDate>Wed, 18 Jun 2014 22:00:00 Z</pubDate><a10:updated>2014-06-18T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Recently we had a meeting that was made up of Me, &lt;a href="http://twitter.com/grumpydev"&gt;Steven&lt;/a&gt; and most of the &lt;a href="http://nancyfx.org/mvm.html"&gt;Most Valued Minions&lt;/a&gt;. On the agenda was everything from discussing the governance of the project, to making plans for a v1, looking over the state of our GitHub repository and much more.&lt;/p&gt;

&lt;p&gt;A lot of ground was covered and the intention of this blog series is to try and get down as much as possible of what we said and decided. We believe in developing in the open, so it is important that we get the information out to our community.&lt;/p&gt;

&lt;p&gt;Please do not hesitate to reach out to us if you have any questions, suggestions and just want to share your thoughts on the subjects!&lt;/p&gt;

&lt;p&gt;Here is a tl;dr of the posts&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Most Valued Minions can now commit code&lt;/li&gt;
&lt;li&gt;Cleaned up our labels on GitHub&lt;/li&gt;
&lt;li&gt;Cleaning up all the open issues and pull-requests&lt;/li&gt;
&lt;li&gt;Aiming for to put out a new release every 8-weekish&lt;/li&gt;
&lt;li&gt;Pushing towards a v1 release&lt;/li&gt;
&lt;li&gt;v1 will be a dual-target release, targeting both .net 4.0 and .net 4.5&lt;/li&gt;
&lt;li&gt;Post-v1 we will support .net 4.0 for about 6 months&lt;/li&gt;
&lt;li&gt;We are going to close down our Google group in about 1 month&lt;/li&gt;
&lt;li&gt;We are going all-in on OWIN, bringing it into our core&lt;/li&gt;
&lt;li&gt;We are fully committed to supporting ASP.NET vNext&lt;/li&gt;
&lt;li&gt;We released &lt;a href="http://blog.nancyfx.org"&gt;blog.nancyfx.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy reading!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/06/19/one-nancy-blog-to-aggregate-them-all/</guid><link>http://thecodejunkie.com/2014/06/19/one-nancy-blog-to-aggregate-them-all/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><category>Open-Source</category><title>One Nancy blog to aggregate them all!</title><description>&lt;p&gt;I have been wanting to create a Nancy blog for a very long time. My initial idea was to create a blog that used static files and posts in markdown format (like &lt;a href="http://github.com/Sandra/Sandra.Snow"&gt;Sandra.Snow&lt;/a&gt;, which is built using Nancy, or &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;) and have people submit pull-requests if they wanted to share content.&lt;/p&gt;

&lt;p&gt;A lack of time got the better of me and I never got any further than creating an empty repository. The idea never vanished and it has been something that we (the core contributors of Nancy) recently started talking about again.&lt;/p&gt;

&lt;p&gt;During our meeting it was brought up again and we thought it was a great idea and that we should act on it. The next day &lt;a href="http://twitter.com/jchannon"&gt;Jonathan Channon&lt;/a&gt; shared his first spike of the blog that, behind the scenes, was powered by a Nancy based RSS aggregator. Awesome work!&lt;/p&gt;

&lt;p&gt;I am very pleased to announce the &lt;strong&gt;beta&lt;/strong&gt; of the &lt;a href="http://blog.nancyfx.org/"&gt;blog.nancyfx.org&lt;/a&gt; website. It is still at a very early stage and we are not done with the design of the site yet (help is always welcome!). The source code for the blog can be found at the &lt;a href="https://github.com/NancyFx/Nancy.Blog"&gt;Nancy.Blog&lt;/a&gt; repository.&lt;/p&gt;

&lt;p&gt;If you blog about Nancy then you can submit a pull-request to have your blog added to the &lt;a href="https://github.com/NancyFx/Nancy.Blog/blob/master/src/Nancy.Blog/feeddata.json"&gt;feeddata.json&lt;/a&gt;. The aggregator will scan your RSS feed for any posts that are in a &lt;a href="https://github.com/NancyFx/Nancy.Blog/blob/master/src/Nancy.Blog/Web.config#L26"&gt;nancy or nancyfx&lt;/a&gt; category.&lt;/p&gt;

&lt;p&gt;I won't to point out that we do not make any claims on your content. Our &lt;a href="http://blog.nancyfx.org/about"&gt;disclaimer&lt;/a&gt; clearly states that we do not take any responsibility or copyright of the content. We provide several links back to the original post and we inform the readers that all comments should be posted on the original blog (again, we provide a link)-&lt;/p&gt;

&lt;p&gt;Don't forget to add our &lt;a href="http://blog.nancyfx.org/rss"&gt;rss-feed&lt;/a&gt; to your reader to get all the aggregated Nancy content from a single source!&lt;/p&gt;
</description><pubDate>Wed, 18 Jun 2014 22:00:00 Z</pubDate><a10:updated>2014-06-18T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;I have been wanting to create a Nancy blog for a very long time. My initial idea was to create a blog that used static files and posts in markdown format (like &lt;a href="http://github.com/Sandra/Sandra.Snow"&gt;Sandra.Snow&lt;/a&gt;, which is built using Nancy, or &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;) and have people submit pull-requests if they wanted to share content.&lt;/p&gt;

&lt;p&gt;A lack of time got the better of me and I never got any further than creating an empty repository. The idea never vanished and it has been something that we (the core contributors of Nancy) recently started talking about again.&lt;/p&gt;

&lt;p&gt;During our meeting it was brought up again and we thought it was a great idea and that we should act on it. The next day &lt;a href="http://twitter.com/jchannon"&gt;Jonathan Channon&lt;/a&gt; shared his first spike of the blog that, behind the scenes, was powered by a Nancy based RSS aggregator. Awesome work!&lt;/p&gt;

&lt;p&gt;I am very pleased to announce the &lt;strong&gt;beta&lt;/strong&gt; of the &lt;a href="http://blog.nancyfx.org/"&gt;blog.nancyfx.org&lt;/a&gt; website. It is still at a very early stage and we are not done with the design of the site yet (help is always welcome!). The source code for the blog can be found at the &lt;a href="https://github.com/NancyFx/Nancy.Blog"&gt;Nancy.Blog&lt;/a&gt; repository.&lt;/p&gt;

&lt;p&gt;If you blog about Nancy then you can submit a pull-request to have your blog added to the &lt;a href="https://github.com/NancyFx/Nancy.Blog/blob/master/src/Nancy.Blog/feeddata.json"&gt;feeddata.json&lt;/a&gt;. The aggregator will scan your RSS feed for any posts that are in a &lt;a href="https://github.com/NancyFx/Nancy.Blog/blob/master/src/Nancy.Blog/Web.config#L26"&gt;nancy or nancyfx&lt;/a&gt; category.&lt;/p&gt;

&lt;p&gt;I won't to point out that we do not make any claims on your content. Our &lt;a href="http://blog.nancyfx.org/about"&gt;disclaimer&lt;/a&gt; clearly states that we do not take any responsibility or copyright of the content. We provide several links back to the original post and we inform the readers that all comments should be posted on the original blog (again, we provide a link)-&lt;/p&gt;

&lt;p&gt;Don't forget to add our &lt;a href="http://blog.nancyfx.org/rss"&gt;rss-feed&lt;/a&gt; to your reader to get all the aggregated Nancy content from a single source!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/06/19/our-sights-are-set-on-releasing-v1/</guid><link>http://thecodejunkie.com/2014/06/19/our-sights-are-set-on-releasing-v1/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><category>Open-Source</category><title>Our sights are set on releasing v1</title><description>&lt;p&gt;Over the years, we have often gotten the question on when we will be releasing v1 of Nancy. While it has never been important to us, many have been claiming that this is something that is important for enterprise adoption.&lt;/p&gt;

&lt;p&gt;I still remember when we went from 0.9.0 to 0.10.0 and many thought we were crazy. Apparently 1.0.0 is the obvious next version after 0.9.0, right? With the current release being 0.23.0, you can perhaps tell that we did not agree.&lt;/p&gt;

&lt;p&gt;Of course, it is my personal belief, that changing the version number to v1, is just an artificial sense of security. Nothing else is going to change in terms of support or promises (well almost, more about versioning further below).&lt;/p&gt;

</description><pubDate>Wed, 18 Jun 2014 22:00:00 Z</pubDate><a10:updated>2014-06-18T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Over the years, we have often gotten the question on when we will be releasing v1 of Nancy. While it has never been important to us, many have been claiming that this is something that is important for enterprise adoption.&lt;/p&gt;

&lt;p&gt;I still remember when we went from 0.9.0 to 0.10.0 and many thought we were crazy. Apparently 1.0.0 is the obvious next version after 0.9.0, right? With the current release being 0.23.0, you can perhaps tell that we did not agree.&lt;/p&gt;

&lt;p&gt;Of course, it is my personal belief, that changing the version number to v1, is just an artificial sense of security. Nothing else is going to change in terms of support or promises (well almost, more about versioning further below).&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;The reasoning behind moving to v1&lt;/h2&gt;

&lt;p&gt;So if the version number is not that important, then why are we finally targeting a v1 release? There are several reasons for us, the two major ones are &lt;strong&gt;SemVer&lt;/strong&gt; and &lt;strong&gt;supported framework versions&lt;/strong&gt;.&lt;/p&gt;

&lt;h2&gt;Adhering to SemVer&lt;/h2&gt;

&lt;p&gt;We have always used SemVer-ish to version our releases, with the difference that we have been bumping the minor version, on each release, instead of the major. &lt;/p&gt;

&lt;p&gt;When we release v1 we are going to adopt a strict SemVer strategy and bump the major version number each time we release a new version that contains public breaking changes.&lt;/p&gt;

&lt;p&gt;Historically we have always had a couple of &lt;a href="https://github.com/NancyFx/Nancy/wiki/Breaking-Changes"&gt;breaking changes&lt;/a&gt;, but we have always tried to make sure they have been well documented and, for the most part, only affected you if you were doing customisations of Nancy.&lt;/p&gt;

&lt;p&gt;While we probably will keep having these kinds of breaking changes for a while longer, we hope they will gradually be fewer over time.&lt;/p&gt;

&lt;p&gt;Adhering to SemVer, this means that we will be assuming the Chrome-model of versioning. We are not bothered with increasing the major frequently. The reason for this is that increasing the major version, with SemVer, communicates something very clear to the consumer.&lt;/p&gt;

&lt;h2&gt;Supported framework versions&lt;/h2&gt;

&lt;p&gt;Ever since Nancy was released, back in 2010, we have been targeting .NET 4.0. This has been an important things for us because it has taken time for 4.5 to gain momentum in the community (especially in enterprise environments), even though it was released nearly 2 years ago.&lt;/p&gt;

&lt;p&gt;With the release of v1 we will start to phase out our support for 4.0. We are doing this for a couple of reasons.&lt;/p&gt;

&lt;p&gt;The first one being that Microsoft is now pushing their new stacks (Katana, ASP.NET vNext and so on) onto .NET 4.5, so there will be a forced adoption of 4.5 for anyone that wants to keep up with the new stuff they release.&lt;/p&gt;

&lt;p&gt;The second reason is that we feel it is time that we start taking advantage of the new language features (such as async/await) and features (classes, method overloads and so on) in the Nancy code base. In many ways this is going to mean we get to delete (yay!) our own code, leaving us with less code to support.&lt;/p&gt;

&lt;h2&gt;v1 will be a double edged sword&lt;/h2&gt;

&lt;p&gt;We plan on releasing the v1 nuget with two sets of assemblies in it. One that targets 4.0 (v1-net40) and another that targets 4.5 (v1-net45).&lt;/p&gt;

&lt;p&gt;The v1-net40 version will be maintained (roughly) for 6 months, before we completely drop support for 4.0. This should give you adequate time to upgrade your infrastructure to support 4.5 (it's time, it was released nearly two years ago).&lt;/p&gt;

&lt;p&gt;When it comes to the v1-net45 version, it will contain the same features as v1-net40. However, it also contains other things that will be unique for the 4.5 target.&lt;/p&gt;

&lt;p&gt;For example, we will add support for &lt;strong&gt;System.Security.Claims&lt;/strong&gt; (which is only available on .NET 4.5) in the v1-net45 release. This will  enable us to flow security credentials into Nancy from things like Katana, which means Nancy will play even better with the OWIN ecosystem.&lt;/p&gt;

&lt;h2&gt;The path to v1&lt;/h2&gt;

&lt;p&gt;The next release is going to be given the version v1-alpha. It is going to be followed by a v1-beta and then finally the actual v1 release. No exact release dates have been set for the beta and final release, but we hope to get the alpha out in about 3-4 weeks time.&lt;/p&gt;

&lt;p&gt;This means that there will not be a 0.24.0 release, however there may be additional 0.23.x releases in the meantime, that contains bug fixes.&lt;/p&gt;

&lt;p&gt;Simply put, this is not a 12 month goal that will eventually happen, we are fully committed to making v1 happen within a reasonable near future.&lt;/p&gt;

&lt;h2&gt;Even the best of plans is going to need fine tuning&lt;/h2&gt;

&lt;p&gt;All of the above is the result of a single meeting, and discussions that have been taking place on JabbR and email, over several months.&lt;/p&gt;

&lt;p&gt;Nothing is set in stone yet, but it is the roadmap that we hope to follow. It is not unlikely that we are going to make adjustments to it as we start heading down that path and if you have any feedback then please let us know!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/06/19/streamlining-our-community-presence/</guid><link>http://thecodejunkie.com/2014/06/19/streamlining-our-community-presence/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><category>Open-Source</category><title>Streamlining our community presence</title><description>&lt;p&gt;There as several ways that our community are able to communicate with us and each other&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jabbr.net/#/rooms/nancyfx"&gt;#nancyfx Jabbr channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%23nancyfx"&gt;#nancyfx hashtag&lt;/a&gt; and &lt;a href="https://twitter.com/nancyfx"&gt;@nancyfx account&lt;/a&gt; on Twitter&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/nancy"&gt;Nancy tag&lt;/a&gt; on StackOverflow&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NancyFx/Nancy/issues"&gt;GitHub issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/?hl=en#!forum/nancy-web-framework"&gt;Google groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, we want to make a small adjustment to that. If you are using our Google group, then
you should definitly keep on reading.&lt;/p&gt;

</description><pubDate>Wed, 18 Jun 2014 22:00:00 Z</pubDate><a10:updated>2014-06-18T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;There as several ways that our community are able to communicate with us and each other&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://jabbr.net/#/rooms/nancyfx"&gt;#nancyfx Jabbr channel&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://twitter.com/search?q=%23nancyfx"&gt;#nancyfx hashtag&lt;/a&gt; and &lt;a href="https://twitter.com/nancyfx"&gt;@nancyfx account&lt;/a&gt; on Twitter&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/tagged/nancy"&gt;Nancy tag&lt;/a&gt; on StackOverflow&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NancyFx/Nancy/issues"&gt;GitHub issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://groups.google.com/forum/?hl=en#!forum/nancy-web-framework"&gt;Google groups&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;However, we want to make a small adjustment to that. If you are using our Google group, then
you should definitly keep on reading.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Closing down our Google Groups presence&lt;/h2&gt;

&lt;p&gt;We have taken the decision to close down our Google groups presence in about one months time. The reason for this is that we feel that we are spreading ourselves too thin to provide the quality of help that we want to.&lt;/p&gt;

&lt;p&gt;The group was great when our community was in its infancy, but the number of questions have been on a steadily on the rise, resulting in more and more questions being unanswered, or answered elsewhere. Time is a finite resource, and unfortunately we have had to focus on other things.&lt;/p&gt;

&lt;p&gt;We would rather see these questions being raised in more public places, to make sure they reach the widest possible audience.&lt;/p&gt;

&lt;h2&gt;Clarifying communications as we move forward&lt;/h2&gt;

&lt;p&gt;Closing our Google group is the only major change we want to make, with regards to how we and the community interact with each other.&lt;/p&gt;

&lt;p&gt;However we would also like to reiterate on how we would prefere communication to take place as we move forward.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;JabbR for chats (which of may be in the form of asking for help)&lt;/li&gt;
&lt;li&gt;StackOverflow for questions (instead of asking them on our Google group)&lt;/li&gt;
&lt;li&gt;GitHub for issues&lt;/li&gt;
&lt;li&gt;Twitter as an information radiator and community interactions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is so that the best kind of help and interactions can be provided based on your needs. Hopefully this will lead to an even stronger community in the long run!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/06/19/the-governance-of-nancy-has-been-expanded/</guid><link>http://thecodejunkie.com/2014/06/19/the-governance-of-nancy-has-been-expanded/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><category>Open-Source</category><title>The governance of Nancy has been expanded</title><description>&lt;p&gt;On the Nov 20, Nancy will be celebrating her 4th birthday. That is quite an achivement for any open-source project, even more so for a project in the .NET ecosystem.&lt;/p&gt;

&lt;p&gt;During these four years a lot has happened, but apart from when &lt;a href="http://twitter.com/grumpydev"&gt;Steven&lt;/a&gt; was added as a &lt;a href="https://github.com/NancyFx/Nancy/commit/c353696bf63cd99d32567160d46504fe15f1e941"&gt;core contributor&lt;/a&gt; back on Mar 31, 2011, no one else has been granted permission to commit code to the main repository.&lt;/p&gt;

&lt;p&gt;That is, until now.&lt;/p&gt;

</description><pubDate>Wed, 18 Jun 2014 22:00:00 Z</pubDate><a10:updated>2014-06-18T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;On the Nov 20, Nancy will be celebrating her 4th birthday. That is quite an achivement for any open-source project, even more so for a project in the .NET ecosystem.&lt;/p&gt;

&lt;p&gt;During these four years a lot has happened, but apart from when &lt;a href="http://twitter.com/grumpydev"&gt;Steven&lt;/a&gt; was added as a &lt;a href="https://github.com/NancyFx/Nancy/commit/c353696bf63cd99d32567160d46504fe15f1e941"&gt;core contributor&lt;/a&gt; back on Mar 31, 2011, no one else has been granted permission to commit code to the main repository.&lt;/p&gt;

&lt;p&gt;That is, until now.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Most Valued Minions&lt;/h2&gt;

&lt;p&gt;Back on Jan 12, 2013, we introduced the &lt;a href="http://nancyfx.org/mvm.html"&gt;Most Valued Minions&lt;/a&gt; program. We describe the minions in the following way&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Nancy Most Valued Minion Award is a designation awarded to those who have proven themselves to be truly exceptional members of the Nancy community.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While the minions have had a lot to say, in terms of the direction of Nancy, they have never been granted commit access. &lt;/p&gt;

&lt;p&gt;Last week we changed that. During a meeting we decided that the minions would gain full commit access, but the ability to publish new versions would remain with me and Steven.&lt;/p&gt;

&lt;p&gt;They are to follow the same approach as me and Steven have done through out the years. Non-trivial changes can be pulled in without any further effort, but larger things should always be reviewed by at least two people.&lt;/p&gt;

&lt;p&gt;Things that introduces new APIs etc. will always be subjected to discussion before anything is pulled in. We have learned that it usually takes a couple of iterations befor APIs take a shape that we like and that adhears to the &lt;a href="https://github.com/NancyFx/Nancy#the-super-duper-happy-path"&gt;super-duper-happy-path&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;The effect&lt;/h2&gt;

&lt;p&gt;It came immediatly! Almost all minions have now reviewed, closed or accepted pull-requests! The recent boost in activity has been awesome to see, and we plan on using this momentum to clear up the issues &amp;amp; pull-requests that are open, plus release a new version roughly every 8 weeks!&lt;/p&gt;

&lt;p&gt;Great things will come out of this change, that's for sure!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/04/09/i-have-been-awarded-an-aspnet-mvp-based-on-oss-contributions/</guid><link>http://thecodejunkie.com/2014/04/09/i-have-been-awarded-an-aspnet-mvp-based-on-oss-contributions/</link><author>andreas@selfinflicted.org</author><category>MVP</category><category>Open-Source</category><title>I have been awarded an ASP.NET MVP based on OSS contributions!</title><description>&lt;p&gt;A while ago &lt;a href="http://twitter.com/shanselman"&gt;Scott Hanselman&lt;/a&gt; blogged about &lt;a href="http://www.hanselman.com/blog/ChangesInTheMicrosoftMVPProgramMVPsForOpenSourceContributions.aspx"&gt;Changes in the Microsoft MVP Program - MVPs for Open Source Contributions&lt;/a&gt;, which detailed changed to the Microsoft MVP program that would enable Microsoft to award people an MVP solely based on open-source contributions.&lt;/p&gt;

&lt;p&gt;Today I am very proud to share with you that I have been awarded the very first open-source based MVP! I have been awarded an MVP in the ASP.NET category, as it is the most appropriate given most of my open-source work has been in web-related technologies.&lt;/p&gt;

&lt;p&gt;Just to be clear: there is no pure "open-source MVP" category, instead Microsoft will award MVPs in one of the existing categories, but based on different criteria. However, I feel it is only appropriate to include the OSS moniker in my MVP title, hence I will use &lt;em&gt;ASP.NET OSS MVP&lt;/em&gt; to describe my MVP.&lt;/p&gt;

</description><pubDate>Tue, 08 Apr 2014 22:00:00 Z</pubDate><a10:updated>2014-04-08T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;A while ago &lt;a href="http://twitter.com/shanselman"&gt;Scott Hanselman&lt;/a&gt; blogged about &lt;a href="http://www.hanselman.com/blog/ChangesInTheMicrosoftMVPProgramMVPsForOpenSourceContributions.aspx"&gt;Changes in the Microsoft MVP Program - MVPs for Open Source Contributions&lt;/a&gt;, which detailed changed to the Microsoft MVP program that would enable Microsoft to award people an MVP solely based on open-source contributions.&lt;/p&gt;

&lt;p&gt;Today I am very proud to share with you that I have been awarded the very first open-source based MVP! I have been awarded an MVP in the ASP.NET category, as it is the most appropriate given most of my open-source work has been in web-related technologies.&lt;/p&gt;

&lt;p&gt;Just to be clear: there is no pure "open-source MVP" category, instead Microsoft will award MVPs in one of the existing categories, but based on different criteria. However, I feel it is only appropriate to include the OSS moniker in my MVP title, hence I will use &lt;em&gt;ASP.NET OSS MVP&lt;/em&gt; to describe my MVP.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;For me, the biggest thing here is the recognition from Microsoft that the work that I have been putting into helping out the .NET ecosystem is appreciated. That by far exceeds any other benefits that this might bring.&lt;/p&gt;

&lt;p&gt;I know a lot of awesome developers that devote so much time and passion in developing amazing frameworks and projects, all for free, which all help make .NET a better place for everyone. Each and everyone of them deserves this as well and I am happy to also be able to share that starting from the next round of MVP announcements (1st July), Microsoft will start awarding more people an MVP based solely based on open source contributions.&lt;/p&gt;

&lt;p&gt;Anyone can &lt;a href="http://mvp.microsoft.com/en-us/nominate-an-mvp.aspx"&gt;Nominate a MVP&lt;/a&gt; and if you know someone that you think should get the same kind of recognition, then head over to the nomination form and fill in their details. I know there are a bunch of people that will be getting my nomination!&lt;/p&gt;

&lt;p&gt;I would also like to thank &lt;a href="http://twitter.com/shanselman"&gt;Scott Hanselman&lt;/a&gt; and everyone else at Microsoft, that have made this change possible and for their hard work to make open-source a first class citizen in their strategy moving forward&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/04/08/building-games-with-unity3d-as-a-way-of-learning/</guid><link>http://thecodejunkie.com/2014/04/08/building-games-with-unity3d-as-a-way-of-learning/</link><author>andreas@selfinflicted.org</author><category>Learning</category><category>Unity3D</category><title>Building games with Unity3D as a way of learning</title><description>&lt;p&gt;In &lt;a href="http://thecodejunkie.com/2014/04/03/knowabunga-day-pitching-ideas-as-a-way-of-learning"&gt;my last blog&lt;/a&gt; I wrote about an upcoming &lt;a href="http://thecodejunkie.com/2014/02/12/creating-value-by-sharing-knowledge"&gt;Knowabunga&lt;/a&gt; day at the &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; offices. The concept of the day was to give people the opportunity to pitch something they would like to spend the day learning more about and have others form up behind their topic.&lt;/p&gt;

&lt;p&gt;The rules were simple, you get a couple of minutes to pitch your idea and in order for it to move beyond a pitch, at least one other person had to be willing to spend their day learning with you. If your pitch did not generate any interest you had to join one of the other teams.&lt;/p&gt;

&lt;p&gt;We were all given the opportunity to post our pitches up front. A lot of interesting topics were brought up such as learning Clojure, using the Web Speech API, Web Components, exploring Roslyn and many many more.&lt;/p&gt;

&lt;p&gt;However, the moment I saw it, I knew I wanted to form up behind a pitch that suggested we spend the day with &lt;a href="http://www.unity3d.com"&gt;Unity3D&lt;/a&gt; and build games! Turns out, so did others and we found ourselves in a group of 8 developers, all eager to get started hacking.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.knowabunga.unity3d.01.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;The above screenshot is from the game that I managed to write, from scratch in less than 6 hours without any real prior experience with Unity3D.&lt;/p&gt;

&lt;p&gt;But let us rewind the tape and see what we did during the day.&lt;/p&gt;

</description><pubDate>Mon, 07 Apr 2014 22:00:00 Z</pubDate><a10:updated>2014-04-07T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;In &lt;a href="http://thecodejunkie.com/2014/04/03/knowabunga-day-pitching-ideas-as-a-way-of-learning"&gt;my last blog&lt;/a&gt; I wrote about an upcoming &lt;a href="http://thecodejunkie.com/2014/02/12/creating-value-by-sharing-knowledge"&gt;Knowabunga&lt;/a&gt; day at the &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; offices. The concept of the day was to give people the opportunity to pitch something they would like to spend the day learning more about and have others form up behind their topic.&lt;/p&gt;

&lt;p&gt;The rules were simple, you get a couple of minutes to pitch your idea and in order for it to move beyond a pitch, at least one other person had to be willing to spend their day learning with you. If your pitch did not generate any interest you had to join one of the other teams.&lt;/p&gt;

&lt;p&gt;We were all given the opportunity to post our pitches up front. A lot of interesting topics were brought up such as learning Clojure, using the Web Speech API, Web Components, exploring Roslyn and many many more.&lt;/p&gt;

&lt;p&gt;However, the moment I saw it, I knew I wanted to form up behind a pitch that suggested we spend the day with &lt;a href="http://www.unity3d.com"&gt;Unity3D&lt;/a&gt; and build games! Turns out, so did others and we found ourselves in a group of 8 developers, all eager to get started hacking.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.knowabunga.unity3d.01.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;The above screenshot is from the game that I managed to write, from scratch in less than 6 hours without any real prior experience with Unity3D.&lt;/p&gt;

&lt;p&gt;But let us rewind the tape and see what we did during the day.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;The first order of the day for the group was to set a curriculum. We quickly came to the conclusion that the group were too big for us too all cooperate on a single project and decided that we would split into smaller teams. &lt;/p&gt;

&lt;p&gt;In the end we broke up into 5 smaller groups, with me in a group of my own because I had my sights set on creating a side scrolling shoot 'em up game. I seemed like a daunting challenge to complete in less than a full work day, without having any prior experience, but I need a good challenge every now and then.&lt;/p&gt;

&lt;p&gt;To get us started, the ones that had read up a bit started of by sharing what they knew about using from having done a bit of homework up front. Me and a co-worker had spent some time reading up on the basics and watching some of the learning material, so we shared our take on it with the group.&lt;/p&gt;

&lt;p&gt;Priority one was to find some decent pre-made art assets that I could use. I could have opened an image editor and drawn something myself, but I figured that somewhere on the internet existed free art that would make my game look much cooler.&lt;/p&gt;

&lt;p&gt;After searching for a while, I found a blog post on MSDN called &lt;a href="http://blogs.msdn.com/b/cdnstudents/archive/2013/09/12/free-space-art-assets-to-help-you-build-your-game.aspx"&gt;"Free Space Art Assets to help you build your game"&lt;/a&gt;. The graphics looked nice and the post said two magical things: &lt;em&gt;free&lt;/em&gt; and &lt;em&gt;no strings attached&lt;/em&gt;. Yay!&lt;/p&gt;

&lt;h2&gt;Entering the zone&lt;/h2&gt;

&lt;p&gt;After that, the rest is a bit of a blur to be honest. I more or less went into a  hour coding frenzy - I got into the zone. I had a small mental check-list of things that I wanted the game to have by the end of the day.&lt;/p&gt;

&lt;p&gt;The list was really modest and (more or less) looked like this&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A ship that can move across the screen&lt;/li&gt;
&lt;li&gt;A scrolling background (parallax if time permits)&lt;/li&gt;
&lt;li&gt;Enemies that fly across the screen&lt;/li&gt;
&lt;li&gt;Some sort of weapon that would let me blow the enemy scum to pieces&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The basics of Unity3D are pretty straight forward. You add &lt;em&gt;Game Objects&lt;/em&gt; to your scene. These game objects can have various &lt;em&gt;Components&lt;/em&gt; added to them. Components are things like audio sources, sprite renderers, animators, colliders, rigidbody (makes your game object be affected by physics) and scripts (to name a few).&lt;/p&gt;

&lt;p&gt;The scripts is what gives your game objects (and world) its behaviors and it is also the thing that made Unity3D so easy for me (and the other people in our group) to get up and running. The reason is that Unity3D built on top of Mono which enables you to write your game code using C# (or JavaScript or Boo). This meant that we did not have to learn a new language, while at the same time learn the concepts of Unity3D and game making in general.&lt;/p&gt;

&lt;p&gt;When you attach a script to a game object, then the &lt;em&gt;this&lt;/em&gt; reference in your script will refer to the game object that it is attached to. This means that you can create a general purpose script and reuse it across different game objects. You can attach multiple scripts to a game object, which makes them extremely powerful.&lt;/p&gt;

&lt;p&gt;It helps if you think about the scripts as &lt;em&gt;Behaviors&lt;/em&gt; (you actually inherit your code from a class called &lt;em&gt;MonoBehavior&lt;/em&gt;) that you attach to your game objects. I can see myself build up a library of scripts that can be reused across multiple projects. Even the camera can have scripts attached to it, so you could create different kind of tracking behaviors (follow player, zoom out when you travel fast etc).&lt;/p&gt;

&lt;h2&gt;Wrapping it up&lt;/h2&gt;

&lt;p&gt;Before I knew it, it was time to wrap up and meet up with the other groups and demo what we had accomplished during the day.&lt;/p&gt;

&lt;p&gt;By the end of the day my game contained&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An infinite scrolling background using a second camera, a quad and texture wrapping&lt;/li&gt;
&lt;li&gt;Three types of enemies, all flying across the screen in various sine curves&lt;/li&gt;
&lt;li&gt;Background music&lt;/li&gt;
&lt;li&gt;A ship that could fire missiles, complete with a pew-pew sound&lt;/li&gt;
&lt;li&gt;Missile explosion sound effect on enemy impact&lt;/li&gt;
&lt;li&gt;Enemy spawners&lt;/li&gt;
&lt;li&gt;Scripts that de-spawned missiles/enemies that fly of screen&lt;/li&gt;
&lt;li&gt;The start of a scoring system&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Below are some screenshots of other games that were created (can you tell that many of them used the same art asset pack? Free stuff is awesome, he-he) during the day.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.knowabunga.unity3d.02.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.knowabunga.unity3d.03.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.knowabunga.unity3d.04.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.knowabunga.unity3d.05.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;I do not have all the details on all these games, but I can tell you that the last one is a 2-4 player game that uses wireless Xbox 360 controllers to steer your skateboarder. The objective is to try and knock everyone else of the platforms.&lt;/p&gt;

&lt;h2&gt;The aftermath&lt;/h2&gt;

&lt;p&gt;Although I did not have enough time to add the scoring, but I revisited the code over the weekend and added it in, along with particle system based explosions when an enemy was hit. I also added a pause option with a single line of code (again, wrapped it up in a Pause-script that can be re-used).&lt;/p&gt;

&lt;p&gt;It is still undecided if I am going to publish the project on GitHub or not. I am all for open-source, but I need to make sure that the audio assets, that I grabbed of random sites on the internet, does not violate any licenses. The biggest challenge would be to find the sites where I found them.&lt;/p&gt;

&lt;p&gt;However, I will most definitely keep evolving my knowledge with Unity3D, because game development is something I have always (and periodically have done using other platforms and tools) wanted to pick up and be more active with. It is a very rewarding and creative process that goes hand in hand with my passion for programming.&lt;/p&gt;

&lt;p&gt;The free version of &lt;a href="http://www.unity3d.com"&gt;Unity3D&lt;/a&gt; is great and it works both on Windows and OSX. Unity3D also lets you target a wide range of platforms such as Windows, OSX, Linux, PS3 (PS4 on the way), XBox, Wii-U, Windows Phone, Windows Store Apps, Blackberry 10, iOS, Android and the web with the help of WebGL.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/04/03/knowabunga-day-pitching-ideas-as-a-way-of-learning/</guid><link>http://thecodejunkie.com/2014/04/03/knowabunga-day-pitching-ideas-as-a-way-of-learning/</link><author>andreas@selfinflicted.org</author><category>Learning</category><title>Knowabunga day, pitching ideas as a way of learning.</title><description>&lt;p&gt;I &lt;a href="http://thecodejunkie.com/2014/02/12/creating-value-by-sharing-knowledge"&gt;recently blogged&lt;/a&gt; about the Knowabunga day concept that we use at &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; as a platform to creating learning oppertunities. Last time we devoted all of our time to contribute to a bunch of awesome open-source projects and it was a great success for everybody that participated. Tomorrow we're meeting up again, but this time we will use a different format.&lt;/p&gt;

&lt;p&gt;The challenge we face is; How do you create a learning oppertunity for nearly 80 people, that all have different passions and paths they would like to explore? The concept we came up with this time was to allow everyone pitch an idea for something they would like to spend the day learning. You then join on of the idea that was pitched and go on a learning frenzy throughout the day!&lt;/p&gt;

</description><pubDate>Wed, 02 Apr 2014 22:00:00 Z</pubDate><a10:updated>2014-04-02T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;I &lt;a href="http://thecodejunkie.com/2014/02/12/creating-value-by-sharing-knowledge"&gt;recently blogged&lt;/a&gt; about the Knowabunga day concept that we use at &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; as a platform to creating learning oppertunities. Last time we devoted all of our time to contribute to a bunch of awesome open-source projects and it was a great success for everybody that participated. Tomorrow we're meeting up again, but this time we will use a different format.&lt;/p&gt;

&lt;p&gt;The challenge we face is; How do you create a learning oppertunity for nearly 80 people, that all have different passions and paths they would like to explore? The concept we came up with this time was to allow everyone pitch an idea for something they would like to spend the day learning. You then join on of the idea that was pitched and go on a learning frenzy throughout the day!&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;The idea is as simple as it is effecient. Everybody has been given the opportunity to think about things they would like to explore more, and then write up a basic, but to the point, pitch that they post on our internal website. People can read the proposals up front, but each pitch will also be given a couple of minutes to state their case at the start of the day.&lt;/p&gt;

&lt;p&gt;One once all the picthes have been made, people form up behind the one they like the most and then we follow a simple agenda throughout the day&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The pitch (described above)&lt;/li&gt;
&lt;li&gt;The curriculum (we decide on a curriculum for the day in the group you joined)&lt;/li&gt;
&lt;li&gt;The hack (codez!)&lt;/li&gt;
&lt;li&gt;Lunch (nom-nom!)&lt;/li&gt;
&lt;li&gt;The talks (time to meet up and share what we've been doing and what we've learned)&lt;/li&gt;
&lt;li&gt;After work (can't have all work, there need to be some play as well!)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I'll be writing a follow up post and let you know how it worked out for us and what kind of pitches that was made. I know I have already made up my mind though! I will be joining a group of people that will be exploring game making using &lt;a href="http://www.unity3d.com"&gt;Unity3D&lt;/a&gt;, which is something I have been playing around with myself the last couple of weeks. Can't wait!&lt;/p&gt;

&lt;p&gt;If you wanna follow the event on twitter, you can follow the &lt;a href="https://twitter.com/search?q=%23knowabunga&amp;amp;src=typd&amp;amp;f=realtime"&gt;#knowabunga&lt;/a&gt; Twitter hashtag!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/02/20/visual-studio-2013-source-map-mode-for-the-vertical-scrollbar/</guid><link>http://thecodejunkie.com/2014/02/20/visual-studio-2013-source-map-mode-for-the-vertical-scrollbar/</link><author>andreas@selfinflicted.org</author><category>Visual Studio</category><title>Visual Studio 2013 source map mode for the vertical scrollbar</title><description>&lt;p&gt;I was playing around a bit with the Visual Studio 2013 scroll bar options, when I noticed a (too me) new section at the bottom of the options. &lt;/p&gt;

&lt;p&gt;The thing that was new to me was the &lt;strong&gt;Behavior&lt;/strong&gt; section at the bottom. More specifically what Microsoft calls &lt;strong&gt;map mode&lt;/strong&gt;. Enabling map mode will turn the vertical scrollbar into a source map, i.e. it will give you an overview of your code, to help you navigate it. This is kind of like the minimap option you find in Sublime Text.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/vs2013.scollbars.sourcemap.png" alt="" /&gt;&lt;/p&gt;

</description><pubDate>Wed, 19 Feb 2014 23:00:00 Z</pubDate><a10:updated>2014-02-19T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;I was playing around a bit with the Visual Studio 2013 scroll bar options, when I noticed a (too me) new section at the bottom of the options. &lt;/p&gt;

&lt;p&gt;The thing that was new to me was the &lt;strong&gt;Behavior&lt;/strong&gt; section at the bottom. More specifically what Microsoft calls &lt;strong&gt;map mode&lt;/strong&gt;. Enabling map mode will turn the vertical scrollbar into a source map, i.e. it will give you an overview of your code, to help you navigate it. This is kind of like the minimap option you find in Sublime Text.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/vs2013.scollbars.sourcemap.png" alt="" /&gt;&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;To enable this, you right-click the vertical scroll bar, then you can choose "Scroll Bar Options..." at the bottom of the context menu, or you can select &lt;strong&gt;Tools -&gt; Options -&gt; Text Editor -&gt; All Languages -&gt; Scroll Bars&lt;/strong&gt; from the menu. This will bring up a bunch of customizations you can apply to the scrollbars.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/vs2013.scollbars.settings.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Here you see the full content of the file, with the code that is currently in view inside the black area. The white line represents the current line of the cursor. By chaning the value of the &lt;strong&gt;source overview&lt;/strong&gt; dropdown, you can change how wide the source map will be.&lt;/p&gt;

&lt;p&gt;If you also enable the &lt;strong&gt;Show Preview Tooltip&lt;/strong&gt; option, you will get a small preview window when you hover the mouse for a bit over the same location in the source map. The preview will show the code at the current mouse cursor position, helping you make sure you are at the right place in your code, before navigating.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/vs2013.scrollbars.preview.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Still not sure if I like it or not, but I am going to leave it on for a while and see if I grow to like or hate it. &lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/02/12/creating-value-by-sharing-knowledge/</guid><link>http://thecodejunkie.com/2014/02/12/creating-value-by-sharing-knowledge/</link><author>andreas@selfinflicted.org</author><category>Learning</category><category>Open-Source</category><title>Creating value by sharing knowledge</title><description>&lt;p&gt;When we announced our &lt;a href="http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37"&gt;full day of open-source at tretton37&lt;/a&gt;, we immediately got a lot of questions from people asking us all sorts of questions. A lot of the questions were about what projects we would be working on and how many people would be involved. However, even more questions were related to how we convinced the company to let us spend a full day doing free work, instead of billing clients.&lt;/p&gt;

&lt;p&gt;The short version is that we did not have to convince the company at all. We already had the corporate structure in place to enable us to do something like this. The more interesting question really is; why are we able do things like this?&lt;/p&gt;

</description><pubDate>Tue, 11 Feb 2014 23:00:00 Z</pubDate><a10:updated>2014-02-11T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;When we announced our &lt;a href="http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37"&gt;full day of open-source at tretton37&lt;/a&gt;, we immediately got a lot of questions from people asking us all sorts of questions. A lot of the questions were about what projects we would be working on and how many people would be involved. However, even more questions were related to how we convinced the company to let us spend a full day doing free work, instead of billing clients.&lt;/p&gt;

&lt;p&gt;The short version is that we did not have to convince the company at all. We already had the corporate structure in place to enable us to do something like this. The more interesting question really is; why are we able do things like this?&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; was founded on the ethos of &lt;strong&gt;"Creating value by sharing knowledge"&lt;/strong&gt;. An important thing to understand is that for us this is just not a marketing strap-line. This is the ethos that defines who we are and it is what attracts people to join our family.&lt;/p&gt;

&lt;p&gt;We have defined five core values that are important to us, as a company, to help us embrace that ethos.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Craftsmanship as a lifestyle&lt;/li&gt;
&lt;li&gt;Embrace the family spirit&lt;/li&gt;
&lt;li&gt;What you see is what you get&lt;/li&gt;
&lt;li&gt;Challenge the world&lt;/li&gt;
&lt;li&gt;Have fun&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I won't go into detail about each of the values, but if you are interested to learning more about them, you can find the information at &lt;a href="http://tretton37.com/about-us"&gt;our website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So who exactly do we share knowledge with? The answer is &lt;strong&gt;EVERYONE&lt;/strong&gt;. We share knowledge inside the company by organizing weekly code nights, we share knowledge with the community by speaking at conferences, sponsoring user groups and other meetups, being crazy enough to &lt;a href="http://leetspeak.com"&gt;create our own, nearly free, conference Leetspeak&lt;/a&gt; and we share knowledge with our clients.&lt;/p&gt;

&lt;p&gt;Just last year we sponsored 16 user group meetups, spoke at 10 conferences, organized 50 (!) code nights, wrote 82 blog posts and organized the second incarnation of the Leetspeak conference. It just so happens that we created a nice little &lt;a href="https://pbs.twimg.com/media/BfSzq6TCMAAKr46.png:large"&gt;infographic&lt;/a&gt; about our past year.&lt;/p&gt;

&lt;p&gt;So sharing knowledge is not something we do, but it's also who we are.&lt;/p&gt;

&lt;h2&gt;Knowabunga Days&lt;/h2&gt;

&lt;p&gt;One thing that we love doing is getting the opportunity to all meetup and embrace our ethos and core values. There is not a single ninja at our company that wouldn't tell you this if you asked them. Because of this and because we are consultancy company, which means we spend a lot of our time spread out between our various clients, we needed to create a platform where we could quench the thirst of having everyone meetup and do cool things. That's where the Knowabunga Days came to see the day of lights.&lt;/p&gt;

&lt;p&gt;What is a Knowabunga Day then? We define them in the following way&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;So what is a Knowabunga Day? It's the name of the days where we gets the opportunity to gather at our headquarters and further sharpen our swords, learning interesting things by experts and each other. The content and format of the days is created by the ninjas in the Knowledge Committee. The content could be just anything related to our community or our field of knowledge, but the day should be delivered with quality and not just be a day where we hang around at the office.&lt;/p&gt;
  
  &lt;p&gt;The thought behind these days goes back to our five core values; maybe most "Craftsmanship as a Lifestyle", "Embrace the Family Spirit" and "Have fun". We state that we focus intently on creating a great environment for gaining knowledge and building a company where we have fun. By doing the Knowabunga Days we try to further develop our own identity and culture as well as maintaining and develop our reputation at existing clients and new ones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;They're nothing more than allocated days where we meetup and try and do awesome things while staying true to our core values and our ethos of creating value by sharing knowledge!&lt;/p&gt;

&lt;h2&gt;Why an open-source Knowabunga Day?&lt;/h2&gt;

&lt;p&gt;I was also asked how and why we decide to spend the day working on open-source. The simple answer is that we all love open-source and many of us regularly contribute to projects and/or maintain them ourselves. The slightly longer answer is that back in November we had a company strategy day, where we all (once again) met up at our offices but this time to talk and plan about our strategy for the next couple of years.&lt;/p&gt;

&lt;p&gt;We have a very flat corporate structure and we also embrace transparency. Truth be told, the company is (not is made up of - pay attention to the distinction) the people that work there. We are all a bunch of geeks with a huge passion for our profession and the software community. Everything around those individuals is there to help facilitate those individuals to get to work with the things that they are passionate about. We work hard, play hard and know when we should be on either side of the line that divides the two.&lt;/p&gt;

&lt;p&gt;So because of this is very important that everybody helps define our strategy for the next couple of year, what we should focus on and what we would love to work more with. During the day, open-source emerged in all sorts of discussions and it became clear that everybody wanted us to actively participate in the open-source community. So that's one of the things we'll be doing, in various formats.&lt;/p&gt;

&lt;p&gt;When it was time for our knowledge committee to plan for our next Knowabunga Day, choosing an open-source theme was the obvious things to do and there were cheers all around when the theme was announced!&lt;/p&gt;

&lt;h2&gt;Planning the day itself&lt;/h2&gt;

&lt;p&gt;Planning the day was, relatively speaking, pretty straight forward and can be summarized with the following check-list&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Define the purpose and goals of the day&lt;/li&gt;
&lt;li&gt;Have everyone sign-up, or decline, to participate during the day&lt;/li&gt;
&lt;li&gt;When we know how many that is able to attend we can start planning how to divide people up&lt;/li&gt;
&lt;li&gt;Ask everyone that will be attending what they'd like to work on (front-end, back-end etc.)&lt;/li&gt;
&lt;li&gt;Ask everyone that will attend if they have any projects they would like to recommend&lt;/li&gt;
&lt;li&gt;Add additional interesting projects to the list of suggested projects&lt;/li&gt;
&lt;li&gt;Select projects that suite the interests of the attending people&lt;/li&gt;
&lt;li&gt;Divide attendees into teams and assign them a project&lt;/li&gt;
&lt;li&gt;Encourage attendees to read up and explore the project a bit ahead of time&lt;/li&gt;
&lt;li&gt;Tell people to prepare their laptops for the environments they will be needing&lt;/li&gt;
&lt;li&gt;Have an awesome day&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The key thing to take away from this is that &lt;strong&gt;planning is key&lt;/strong&gt;. We would never have succeeded in producing 23 total (I've previously mentioned 16 but we had not counted both offices at that time) in a single day unless we had made preparations up front - we would have wasted too much time trying to decide what to do and with whom we'd like to work with.&lt;/p&gt;

&lt;p&gt;For this particular Knowabunga Day we followed a simple agenda when it came to the projects&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Take it for a spin&lt;/li&gt;
&lt;li&gt;Take it apart&lt;/li&gt;
&lt;li&gt;Contribute to the project&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We had allocated time for each of these activities to help people familiarize themselves with the project and become confident enough with them to start contributing back.&lt;/p&gt;

&lt;p&gt;The rest is history...&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/02/04/github-expandinizr-1-3-1-release-notes/</guid><link>http://thecodejunkie.com/2014/02/04/github-expandinizr-1-3-1-release-notes/</link><author>andreas@selfinflicted.org</author><category>Chrome</category><title>Github.ExpandinizR v1.3.1 release notes</title><description>&lt;p&gt;This time, the awesome &lt;a href="https://github.com/khellang"&gt;Kristian Hellang&lt;/a&gt; contributed changes that added responsive functionality to GitHub. You can now enjoy a full-width experience, removed truncating and word-wrap on long file and directory names.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/github.expandinizer.logo.png" alt="" /&gt;&lt;/p&gt;

</description><pubDate>Mon, 03 Feb 2014 23:00:00 Z</pubDate><a10:updated>2014-02-03T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;This time, the awesome &lt;a href="https://github.com/khellang"&gt;Kristian Hellang&lt;/a&gt; contributed changes that added responsive functionality to GitHub. You can now enjoy a full-width experience, removed truncating and word-wrap on long file and directory names.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/github.expandinizer.logo.png" alt="" /&gt;&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Currently enhances the following&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Removes the truncating of file and directory names in the repository browser&lt;/li&gt;
&lt;li&gt;Really long file and directory names will word-wrap&lt;/li&gt;
&lt;li&gt;Fully expands the website, with breakpoints at 1400px, 1600px and 1800px&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Contributors&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/phillip-haydon"&gt;Phillip Haydon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/frankradocaj"&gt;Frank Radocaj&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/khellang"&gt;Kristian Hellang&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Changelog&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;v1.3.1 - Fixed a couple of small layout bugs&lt;/li&gt;
&lt;li&gt;v1.3.0 - Changed to a responsive approach&lt;/li&gt;
&lt;li&gt;v1.2.0 - Improved the un-truncting to word-wrap (thanks Frank Radocaj)&lt;/li&gt;
&lt;li&gt;v1.1.1 - Fix for labels on the expanded issue form&lt;/li&gt;
&lt;li&gt;v1.1.0 - Expands the issue form to full width (thanks Phillip Haydon)&lt;/li&gt;
&lt;li&gt;v1.0.0 - First release of the extension&lt;/li&gt;
&lt;/ul&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/02/03/open-source-day-aftermath/</guid><link>http://thecodejunkie.com/2014/02/03/open-source-day-aftermath/</link><author>andreas@selfinflicted.org</author><category>Open-Source</category><title>Open-Source day aftermath</title><description>&lt;p&gt;I recently blogged about &lt;a href="http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37"&gt;A full day of open-source at tretton37&lt;/a&gt; and on Friday 31st January 2014 we all gathered at our &lt;a href="http://www.flickr.com/photos/tretton37/sets/72157634906411089/"&gt;awesome offices in Lund and Stockholm&lt;/a&gt; to spend the day working with open-source software.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.open.source.day.mission.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Our mission for the day was simple; create value for both the team and the open-source community!&lt;/p&gt;

</description><pubDate>Sun, 02 Feb 2014 23:00:00 Z</pubDate><a10:updated>2014-02-02T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;I recently blogged about &lt;a href="http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37"&gt;A full day of open-source at tretton37&lt;/a&gt; and on Friday 31st January 2014 we all gathered at our &lt;a href="http://www.flickr.com/photos/tretton37/sets/72157634906411089/"&gt;awesome offices in Lund and Stockholm&lt;/a&gt; to spend the day working with open-source software.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.open.source.day.mission.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Our mission for the day was simple; create value for both the team and the open-source community!&lt;/p&gt;

&lt;!--excerpt--&gt; 

&lt;p&gt;The first half of the day was spent getting to know the project your teams would be working with. The had set time aside to "Take it for a spin", where we grabbed the project and played around with the code and got a basic sample working on our local machines. &lt;/p&gt;

&lt;p&gt;Next up was "Take it apart" and this is where the real fun started taking place. We dove into the code and tried to figure out how the code was glued together and what made it tick. We had allocated two hours for this, but most teams got excited and started working on pull-requests as soon as they had figured out the mechanics of their projects :)&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.open.source.day.contributing.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;After lunch we had two short presentations. I held one on the subject of "The 1-2-3 of Open-Source Contributing", which was a short introduction on a couple of things that it worth knowing up-front before sending any project code. Things like the project licence, contributor licence agreements, copyrights and general DO's and DON'Ts where brought up.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.open.source.day.hacking.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;The the real hacking started! Everybody was in such an awesome mood and the atmosphere was really great. People where breaking out of their teams to offer help where they could, all for the purpose of making sure that we delivered as much value to the projects as we possibly could. &lt;/p&gt;

&lt;p&gt;It's always fun when we all get to meet up and code together, something we unfortunately don't get to do as much as we want because we're a consultant company and spend a lot of time at clients, but it was especially fun this time because we got to work on some really cool projects and contribute back.&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.open.source.day.results.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;At the end of the day we took toll and it turned out that we had managed to send in a total of &lt;strong&gt;23 pull-requests&lt;/strong&gt;, which is quite an achievement! I feel to proud of our entire company. Not only for taking the initiative of the day itself, but also for being able to create some tangible value to the open-source community.&lt;/p&gt;

&lt;p&gt;Throughout the day, one of the reoccurring discussions were; "Is the cake a lie?"&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/tretton37.open.source.day.cake.jpg" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;Turns out it wasn't! We finished the day by celebrating out awesome day and also the fact that &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; turned 4 years old! What a day...&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/01/28/keyboard-shortcuts-for-taking-a-screenshot-on-osx/</guid><link>http://thecodejunkie.com/2014/01/28/keyboard-shortcuts-for-taking-a-screenshot-on-osx/</link><author>andreas@selfinflicted.org</author><category>OS X</category><title>Keyboard shortcuts for taking a screenshot on OS X</title><description>&lt;p&gt;OS X comes with some really nice keyboard shortcuts to take screenshots. The problem is that I keep forgetting exactly which shortcut does. So for the purpose of having a place to look them up the next time I forget - here they are&lt;/p&gt;

&lt;h2&gt;Saving to a file on the desktop&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-3&lt;/kbd&gt;: Take a screenshot of the screen&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then select an area: Take a screenshot of an area&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then &lt;kbd&gt;Space&lt;/kbd&gt;, then click a window: Take a screenshot of a window&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Saving to the clipboard&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-3&lt;/kbd&gt;: Take a screenshot of the screen&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then select an area: Take a screenshot of an area&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then &lt;kbd&gt;Space&lt;/kbd&gt;, then click a window: Take a screenshot of a window&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Mon, 27 Jan 2014 23:00:00 Z</pubDate><a10:updated>2014-01-27T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;OS X comes with some really nice keyboard shortcuts to take screenshots. The problem is that I keep forgetting exactly which shortcut does. So for the purpose of having a place to look them up the next time I forget - here they are&lt;/p&gt;

&lt;h2&gt;Saving to a file on the desktop&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-3&lt;/kbd&gt;: Take a screenshot of the screen&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then select an area: Take a screenshot of an area&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then &lt;kbd&gt;Space&lt;/kbd&gt;, then click a window: Take a screenshot of a window&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Saving to the clipboard&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-3&lt;/kbd&gt;: Take a screenshot of the screen&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then select an area: Take a screenshot of an area&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then &lt;kbd&gt;Space&lt;/kbd&gt;, then click a window: Take a screenshot of a window&lt;/li&gt;
&lt;/ul&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37/</guid><link>http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37/</link><author>andreas@selfinflicted.org</author><category>Open-Source</category><title>A full day of open-source at tretton37</title><description>&lt;p&gt;What do you get when you take 50 developers, 12 open-source projects and a full day of coding? You get a &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; team knowledge day, with focus on contributing to open-source projects!&lt;/p&gt;

&lt;p&gt;It is not often that I blog about my work, but this is just so awesome that it had to be shared. So, about once per quarter we try and organize a company knowledge day, where we take everyone off their billable assignments and cuddle up at our office for a full day of awesome.&lt;/p&gt;

</description><pubDate>Sun, 26 Jan 2014 23:00:00 Z</pubDate><a10:updated>2014-01-26T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;What do you get when you take 50 developers, 12 open-source projects and a full day of coding? You get a &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; team knowledge day, with focus on contributing to open-source projects!&lt;/p&gt;

&lt;p&gt;It is not often that I blog about my work, but this is just so awesome that it had to be shared. So, about once per quarter we try and organize a company knowledge day, where we take everyone off their billable assignments and cuddle up at our office for a full day of awesome.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;This time (the event will take place 4 days after I've posted this) we decided that we should spend the day working on various open-source projects, by sending them some pull-requests!&lt;/p&gt;

&lt;p&gt;We &lt;i class="icon-heart"&gt;&lt;/i&gt; open-source and it felt like the right thing for us to do. All of us use various open-source projects in our daily work so it is nice that we, as a company, get to contribute something back (of course many of us send our pull-request otherwise as well!).&lt;/p&gt;

&lt;p&gt;Because we want to maximize the amount of time we can spent coding, we have chosen all the project up-front and divided us into teams.&lt;/p&gt;

&lt;p&gt;The projects that was suggested, and ultimately picked, where&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NancyFx/Nancy"&gt;NancyFx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SignalR/SignalR"&gt;SignalR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scriptcs/scriptcs"&gt;ScriptCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Glimpse/Glimpse"&gt;Glimpse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ninject/ninject"&gt;Ninject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular.js"&gt;AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wycats/handlebars.js"&gt;Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/knockout/knockout"&gt;KnockoutJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MiniProfiler/dotnet"&gt;MiniProfiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/elmah"&gt;Elmah&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://templatehub.codeplex.com"&gt;Template Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://caliburnmicro.codeplex.com"&gt;Caliburn.Micro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Nope, I won't be on Team Nancy!)&lt;/p&gt;

&lt;p&gt;I really hope that all teams get the opportunity to send in at least one pull-request each. Of course, what would be really awesome is if we managed to fire of a couple of them for each project!&lt;/p&gt;

&lt;p&gt;Can't wait to get started! Wouldn't it be awesome if you could organize something similar where you work? C'mon!&lt;/p&gt;

&lt;p&gt;Keep an eye on our Twitter stream &lt;a href="http://twitter.com/tretton37"&gt;@tretton37&lt;/a&gt; for updates during our knowledge day.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/01/20/copying-virtual-machines-between-azure-subscriptions/</guid><link>http://thecodejunkie.com/2014/01/20/copying-virtual-machines-between-azure-subscriptions/</link><author>andreas@selfinflicted.org</author><category>Azure</category><title>Copying virtual machines between Azure subscriptions</title><description>&lt;p&gt;I recently found myself in the need to copy a couple of Azure Virtual Machines from one subscription to another. Not having used Azure that much before, I figured there must be support to perform this kind of migration from inside the Azure portal itself.&lt;/p&gt;

&lt;p&gt;Turns out there isn't, but that does not mean it is impossible, or even hard for that matter. Once you figure it out, it is actually quite frictionless and smooth.&lt;/p&gt;

</description><pubDate>Sun, 19 Jan 2014 23:00:00 Z</pubDate><a10:updated>2014-01-19T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;I recently found myself in the need to copy a couple of Azure Virtual Machines from one subscription to another. Not having used Azure that much before, I figured there must be support to perform this kind of migration from inside the Azure portal itself.&lt;/p&gt;

&lt;p&gt;Turns out there isn't, but that does not mean it is impossible, or even hard for that matter. Once you figure it out, it is actually quite frictionless and smooth.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;The easy and, as it turns out, slow way it to go to the Azure Portal, click &lt;strong&gt;Storage&lt;/strong&gt;, then the name of your storage, followed by &lt;strong&gt;Containers&lt;/strong&gt; at the top. You should now see a container called &lt;strong&gt;Vhds&lt;/strong&gt;. Clicking that will list all of the VHD file you have on your subscription.&lt;/p&gt;

&lt;p&gt;By selecting one of the files the then clicking the &lt;strong&gt;Download&lt;/strong&gt; button, at the bottom of the page, Azure will start a file download straight in the browser. I am on a 100 mbit connection and I was only getting around 4MB/s on average.&lt;/p&gt;

&lt;p&gt;Normally that is a pretty OK download speed, but I was looking to transfer two VHD files that totalled at 150GB of data. Needless to say it would take quite a while to complete so I needed another solution.&lt;/p&gt;

&lt;h2&gt;Blob Service REST API&lt;/h2&gt;

&lt;p&gt;Microsoft was nice enough to create a nice &lt;a href="http://msdn.microsoft.com/en-us/library/windowsazure/dd135733.aspx"&gt;Blob Service REST API&lt;/a&gt; that you can use to programatically access the content of your containers.&lt;/p&gt;

&lt;p&gt;To do this, the API uses the concept of access keys. If you have the name and access key to a storage, then you can use that to access the files that are stored in it.&lt;/p&gt;

&lt;p&gt;You find your keys by going to the Azure Portal, click on &lt;strong&gt;Storage&lt;/strong&gt; then &lt;strong&gt;Manage Access Keys&lt;/strong&gt; at the bottom of the page. There are two keys, the primary and the secondary. Both do the same thing, but Azure gives you a convinent way to have a personal key and a key you give to services etc. that you wish to gain access to your storage.&lt;/p&gt;

&lt;p&gt;At anytime you can regenerate theys keys if you feel they've been compromised or if you have given them to some service and you no longer wish them to be valid. Just click the &lt;strong&gt;Regenerate&lt;/strong&gt; button next to the key you wish to create a new one for.&lt;/p&gt;

&lt;h2&gt;AzCopy to the rescue&lt;/h2&gt;

&lt;p&gt;I tried a couple of different tools, that uses the Blob Service REST API, but they all suffered from the same problem as the browser download option - speed.&lt;/p&gt;

&lt;p&gt;Then &lt;a href="http://twitter.com/avidebbo"&gt;David Ebbo&lt;/a&gt; pointed me to the &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2013/04/01/azcopy-using-cross-account-copy-blob.aspx"&gt;AzCopy&lt;/a&gt;. David works on Windows Azure Web Sites and he told me they uses that tool to copy things across blob stores.&lt;/p&gt;

&lt;p&gt;It just so happened that as of CTP2, AzCopy supports the &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2013/04/01/azcopy-using-cross-account-copy-blob.aspx"&gt;Asynchronous Cross-Account Copy Blob&lt;/a&gt; feature of the Blob Service REST API.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: To use this feature, your storage account must have been created after June 7th 2012. Read more about this limitaion on the previous link&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What this enables you to do is to copy from one store to another, without the need to first copying the data locally. This drastically improved the transfer speed. Using AzCopy I was getting speeds at around 45MB/s instead of 4MB/s!&lt;/p&gt;

&lt;p&gt;I ended up using the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AzCopy
https://&amp;lt;sourceaccount&amp;gt;.blob.core.windows.net/&amp;lt;sourcecontainer&amp;gt;/ 
https://&amp;lt;destaccount&amp;gt;.blob.core.windows.net/&amp;lt;destcontainer&amp;gt;/
/sourcekey:&amp;lt;key&amp;gt;
/destkey:&amp;lt;key&amp;gt;
/S
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and it worked great!&lt;/p&gt;

&lt;h2&gt;A word of caution on Azure Disks vs Images&lt;/h2&gt;

&lt;p&gt;After I had copied the VHD files to my second subscription, I set out to re-create my virtual machines. This is where I messed up a bit. I went into &lt;strong&gt;Virtual Machines&lt;/strong&gt; and then &lt;strong&gt;Images&lt;/strong&gt; where I created images of the VHD files. What I should have done is gone into &lt;strong&gt;Virtual Machines&lt;/strong&gt; followed by &lt;strong&gt;Disks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The difference between the two is that images are like templates. You use them to create a completley new VHD file, based on the image, that you then use as a disk for your virtual machine.&lt;/p&gt;

&lt;p&gt;Since I was copying existing machines across, I just needed to create disks directly, that I then used to create my virtual machines from. &lt;/p&gt;

&lt;p&gt;When I created a virtual machine from one of the images, it worked fine (I could login to the machine), except for Azure getting stuck while provisioning my machine. So even though the machine was functional, it was not sitting quite right with Azure. Once I changed to use a disk, it immediatly behaved as I expected.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/12/13/community-maintained-nancy-fsharp-templates-for-visual-studio/</guid><link>http://thecodejunkie.com/2013/12/13/community-maintained-nancy-fsharp-templates-for-visual-studio/</link><author>andreas@selfinflicted.org</author><category>F#</category><category>Nancy</category><title>Community maintained Nancy F# templates for Visual Studio</title><description>&lt;p&gt;Not too long ago, I posted about the &lt;a href="http://thecodejunkie.com/2013/11/15/On-the-Nancy-templates-for-Visual-Studio"&gt;Visual Studio templates for Nancy&lt;/a&gt; and how we had taken the (tough) decision to only maintain C# templates outselves. Not because we do not see value in supporting other languages, but solely because of the shear amount of work that is required to maintain a single template.&lt;/p&gt;

&lt;p&gt;Maintaining 9 templates (as we do with out C# templates) is a time consuming process, and the time required to support additional templates scales linear to the amount of templates we add.&lt;/p&gt;

&lt;p&gt;We reached out the authors of the VB.NET templates and F# templates, as well as our community, and ask them to maintain the templates themselves. I didn't take long for the F# community to step up to the plate...&lt;/p&gt;

</description><pubDate>Thu, 12 Dec 2013 23:00:00 Z</pubDate><a10:updated>2013-12-12T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;Not too long ago, I posted about the &lt;a href="http://thecodejunkie.com/2013/11/15/On-the-Nancy-templates-for-Visual-Studio"&gt;Visual Studio templates for Nancy&lt;/a&gt; and how we had taken the (tough) decision to only maintain C# templates outselves. Not because we do not see value in supporting other languages, but solely because of the shear amount of work that is required to maintain a single template.&lt;/p&gt;

&lt;p&gt;Maintaining 9 templates (as we do with out C# templates) is a time consuming process, and the time required to support additional templates scales linear to the amount of templates we add.&lt;/p&gt;

&lt;p&gt;We reached out the authors of the VB.NET templates and F# templates, as well as our community, and ask them to maintain the templates themselves. I didn't take long for the F# community to step up to the plate...&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;a href="http://wizardsofsmart.net/"&gt;Ryan Riley&lt;/a&gt; (&lt;a href="http://twitter.com/panesofglass"&gt;@panesofglass&lt;/a&gt; on Twitter) and &lt;a href="http://blog.danielmohl.com/"&gt;Daniel Mohl&lt;/a&gt; (&lt;a href="http://twitter.com/dmohl"&gt;@dmohl&lt;/a&gt; on Twitter) took the templates and creates their own VSIX extension with their F# templates&lt;/p&gt;

&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/nancy.fsharp.templates.for.visual.studio.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;The templates can be found at &lt;a href="http://visualstudiogallery.msdn.microsoft.com/b55b8aac-b11a-4a6a-8a77-2153f46f4e2f"&gt;F# Nancy Template&lt;/a&gt; on the Visual Studio Gallery.&lt;/p&gt;

&lt;p&gt;For more informatation, head over to &lt;a href="http://bloggemdano.blogspot.se/2013/12/a-few-other-template-additions-and.html"&gt;Daniel's blog&lt;/a&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/11/15/on-the-nancy-templates-for-visual-studio/</guid><link>http://thecodejunkie.com/2013/11/15/on-the-nancy-templates-for-visual-studio/</link><author>andreas@selfinflicted.org</author><category>Nancy</category><title>On the Nancy templates for Visual Studio</title><description>&lt;p&gt;A while back we introduced Nancy templates for Visual Studio, which gave you the ability to create a new Nancy project that has Nancy added out-of-the-box. This meant no more creating an empty ASP.NET web application, removing all those pesky project references and installing the Nancy nugets, just to get up and running.&lt;/p&gt;

&lt;p&gt;Unfortunately we have not been able to update these template with every new release of Nancy, which means you have had to update the Nancy Nugets to make sure you where using the latest build. &lt;/p&gt;

&lt;p&gt;Believe me when I tell you that this has not been out of laziness, but rather the instinct to survive, but hopefully we've taken a couple of important decisions to remedy this in the future&lt;/p&gt;

</description><pubDate>Thu, 14 Nov 2013 23:00:00 Z</pubDate><a10:updated>2013-11-14T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;A while back we introduced Nancy templates for Visual Studio, which gave you the ability to create a new Nancy project that has Nancy added out-of-the-box. This meant no more creating an empty ASP.NET web application, removing all those pesky project references and installing the Nancy nugets, just to get up and running.&lt;/p&gt;

&lt;p&gt;Unfortunately we have not been able to update these template with every new release of Nancy, which means you have had to update the Nancy Nugets to make sure you where using the latest build. &lt;/p&gt;

&lt;p&gt;Believe me when I tell you that this has not been out of laziness, but rather the instinct to survive, but hopefully we've taken a couple of important decisions to remedy this in the future&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;So what does it take to create a template (with Nuget support)?&lt;/h2&gt;

&lt;p&gt;As it turns out, quite a lot actually. It definitely takes a lot more than I anticipated and it is quite obvious that that tooling was not created for performing anything else than trivial template tasks.&lt;/p&gt;

&lt;p&gt;Here is basically the steps we have to do extract the template from the projects&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start Visual Studio and load the solution&lt;/li&gt;
&lt;li&gt;File -&gt; Export Template&lt;/li&gt;
&lt;li&gt;Make sure "Project Template" is selected on the first page of the Wizard + select the correct project in the drop-down&lt;/li&gt;
&lt;li&gt;Fill out template name, description, icon and preview image (either use the Browse button or copy/paste the path)&lt;/li&gt;
&lt;li&gt;Export the template to the default (non-changeable) location&lt;/li&gt;
&lt;li&gt;Go the output location&lt;/li&gt;
&lt;li&gt;Break open the zip file&lt;/li&gt;
&lt;li&gt;Open the MyTemplate.vstemplate file (yes, they all get this name when you export)&lt;/li&gt;
&lt;li&gt;Modify the "DefaultName" element&lt;/li&gt;
&lt;li&gt;Modify all .cs files and so that the namespace declarations (and other things you need to like assembly name etc) so it uses the $safeprojectname$ placeholder&lt;/li&gt;
&lt;li&gt;Insert the &lt;package&gt; node (and sub-nodes), which contains information on which Nuget packages to install + versions&lt;/li&gt;
&lt;li&gt;Zip up the content again (making sure you get the folder structure right)&lt;/li&gt;
&lt;li&gt;Copy the zip to the right location in our VSIX project (ProjectTemplates\CSharp\Web)&lt;/li&gt;
&lt;li&gt;Go back into visual studio, include the zip in the project, edit it's build action to "content" and configure it to be included in the VSI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have to repeat these things for each and everyone of the templates we ship. We currently have 9 C# templates and that is already quite a work load to do for each new release of Nancy we put out.&lt;/p&gt;

&lt;p&gt;If that was not enough, the awesome &lt;a href="http://wizardsofsmart.net/"&gt;Ryan Riley&lt;/a&gt; (&lt;a href="http://twitter.com/panesofglass"&gt;@panesofglass&lt;/a&gt; on Twitter) and &lt;a href="http://blogs.lessthandot.com/index.php/All/?disp=authdir&amp;amp;author=7"&gt;Christiaan Baes&lt;/a&gt; (&lt;a href="http://twitter.com/chrissie1"&gt;@chrissie1&lt;/a&gt; on Twitter) send us pull-requests for adding F# and VB.NET templates.&lt;/p&gt;

&lt;p&gt;This pushed the number of template count a bit into the 20's and this is pretty much where our work efforts kept coming to a grinding halt. The sheer amount of work required to get these new templates out is what made me start (and abandon) the work several times.&lt;/p&gt;

&lt;p&gt;Yesterday, me and &lt;a href="http://twitter.com/grumpydev"&gt;@grumpydev&lt;/a&gt; took the decision to only support the C# templates moving forward. We really appreciate the work put in by Ryan and Christiaan, but we came to the conclusion that the vast majority of our users are C# users and the added workload could not justify us supporting F# and VB.NET.&lt;/p&gt;

&lt;p&gt;That said, we would really like to thank Ryan and Christiaan for their work and support and would like to encourage them to either support the templates themselves, or see someone else in the community step up and do it for them (or why not team up with them if these templates are in your interest?)&lt;/p&gt;

&lt;h2&gt;Moving forward&lt;/h2&gt;

&lt;p&gt;By deciding to only focus on the C# templates, we reduce our workload by a huge chunk moving forward and thanks to the awesome &lt;a href="http://devlead.se"&gt;Mattias Karlsson&lt;/a&gt; (&lt;a href="http://twitter.com/devload"&gt;@devlead&lt;/a&gt; on Twitter), whom sent us a pull-request last night with the C# templates updated to 0.22.1, we expect to have these in your Visual Studio any day now!&lt;/p&gt;

&lt;p&gt;We have also decided to look into the &lt;a href="http://sidewaffle.com/"&gt;Sidewaffle&lt;/a&gt; project as an alternative to the VSIX distribution. If anyone would like to offer their Sidewaffle expertise or just help out, please let us know&lt;/p&gt;

&lt;p&gt;Thanks for your patience!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/11/14/i-created-the-github-expandinizer-extension-for-google-chrome/</guid><link>http://thecodejunkie.com/2013/11/14/i-created-the-github-expandinizer-extension-for-google-chrome/</link><author>andreas@selfinflicted.org</author><category>Announcement</category><category>Chrome</category><title>I created the Github.Expandinizr extension for Google Chrome</title><description>&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/github.expandinizer.logo.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;A while back when &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; updated the design of their web page, they introduces a change that has annoyed a lot of people; they decided to truncate the file/folder name in the repository browser. This makes it impossible to distinguish files/folders that follow a naming conventions, such as namespace hierarchies.&lt;/p&gt;

</description><pubDate>Wed, 13 Nov 2013 23:00:00 Z</pubDate><a10:updated>2013-11-13T23:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;&lt;img src="http://thecodejunkie.com/img/github.expandinizer.logo.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;A while back when &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; updated the design of their web page, they introduces a change that has annoyed a lot of people; they decided to truncate the file/folder name in the repository browser. This makes it impossible to distinguish files/folders that follow a naming conventions, such as namespace hierarchies.&lt;/p&gt;

&lt;!--excerpt--&gt; 

&lt;p&gt;What I did was create a very simple Google Chrome extension, called &lt;a href="https://chrome.google.com/webstore/detail/githubexpandinizr/cbehdjjcilgnejbpnjhobkiiggkedfib"&gt;GitHub.Expandinizr&lt;/a&gt; which &lt;em&gt;kinda&lt;/em&gt; solves the problem. I say kinda, because it is a quick hack really and it was not designed to be prefect. That said, if you can improve it, then please send a pull-request, you can find the source at &lt;a href="https://github.com/thecodejunkie/github.expandinizr"&gt;github.com/thecodejunkie/github.expandinizr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So what does it do? All it really does is that when it detects that you are browsing github.com, it will inject a single css class into the page to remove the ellipsis from the file/folder name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.css-truncate.css-truncate-target {
    display: inline !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This css class is usually sets the &lt;code&gt;display&lt;/code&gt; property to &lt;code&gt;inline-block&lt;/code&gt; with an added &lt;code&gt;text-overflow&lt;/code&gt; that has been set to &lt;code&gt;ellipsis&lt;/code&gt;. By changing the display we prevent it, in a rather crude way, to ellipsis the text. Notice that the css declaration has been marked as &lt;code&gt;!important&lt;/code&gt; which will ensure it gets higher priority than the one in the GitHub css declaration.&lt;/p&gt;

&lt;h2&gt;Known issues&lt;/h2&gt;

&lt;p&gt;Like I said, this is a hack. If the un-ellipsed text becomes too long, then it could cause the new width of the repository browser to push into other page elements, such as the sidebar navigation on the right hand side of the design. This is especially noticeable on the main page of the repository browser, since the sidebar is expanded and takes up much more horizontal space, than when it has been collapsed.&lt;/p&gt;

&lt;p&gt;I've fine with this, so at present I am not going to spend any time trying to figure out an alternative approach, that resolves this issues (I spend 10 minutes on it and got a decent result, but it caused other problems). But, like I said, if you come up with a better solution, send me a pull-request with an updated &lt;a href="https://github.com/thecodejunkie/github.expandinizr/blob/master/ext/content/inject.css"&gt;inject.css&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;All-in-all&lt;/h2&gt;

&lt;p&gt;This was a fun learning experience. It was the first time that I created a proper Chrome Extension and it was certainly the first time I published it in the Chrome Store. Who knew it cost $5 to become a publisher in the store? Now I know!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/09/10/i-am-back-and-this-time-i-am-taking-control/</guid><link>http://thecodejunkie.com/2013/09/10/i-am-back-and-this-time-i-am-taking-control/</link><author>andreas@selfinflicted.org</author><category>Announcement</category><category>Blogging</category><title>I am back and this time I am taking control</title><description>&lt;p&gt;When Posterous closed down on April 30th 2012, they took my blog with them. I made sure I downloaded my content before the service shut down but did not make any effort in relocating. Why? I had gotten to the point where I thought there was something inherently wrong with the way that blogging services and blog engines work.&lt;/p&gt;

&lt;p&gt;A blog, in its purest form, is nothing but information with a bit of formatting, added to make it look nice, yet each service (and engine) seem to have need to mangle the content. They do this by either converting your data into HTML, thus losing the initial separation of content and formatting, and/or store it in a proprietary format. Either way, as soon as you have handed over your post, you are no longer in control and that bugs me.&lt;/p&gt;

&lt;p&gt;Looking around for options on how to solve this, I got more and more keen on the idea of using &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, that lets you write your posts using Markdown and then automatically convert them to static pages using &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The things that really appealed to me were&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I would get to write my content in a very neutral markup language&lt;/li&gt;
&lt;li&gt;I could store my posts in a normal Git repository&lt;/li&gt;
&lt;li&gt;The pages would be static and there would be no need for databases or other software to run it&lt;/li&gt;
&lt;/ul&gt;

</description><pubDate>Mon, 09 Sep 2013 22:00:00 Z</pubDate><a10:updated>2013-09-09T22:00:00Z</a10:updated><a10:content type="html">&lt;p&gt;When Posterous closed down on April 30th 2012, they took my blog with them. I made sure I downloaded my content before the service shut down but did not make any effort in relocating. Why? I had gotten to the point where I thought there was something inherently wrong with the way that blogging services and blog engines work.&lt;/p&gt;

&lt;p&gt;A blog, in its purest form, is nothing but information with a bit of formatting, added to make it look nice, yet each service (and engine) seem to have need to mangle the content. They do this by either converting your data into HTML, thus losing the initial separation of content and formatting, and/or store it in a proprietary format. Either way, as soon as you have handed over your post, you are no longer in control and that bugs me.&lt;/p&gt;

&lt;p&gt;Looking around for options on how to solve this, I got more and more keen on the idea of using &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, that lets you write your posts using Markdown and then automatically convert them to static pages using &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The things that really appealed to me were&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I would get to write my content in a very neutral markup language&lt;/li&gt;
&lt;li&gt;I could store my posts in a normal Git repository&lt;/li&gt;
&lt;li&gt;The pages would be static and there would be no need for databases or other software to run it&lt;/li&gt;
&lt;/ul&gt;

&lt;!--excerpt--&gt; 

&lt;p&gt;While looking into this, I asked &lt;a href="http://philliphaydon.com"&gt;Phillip Haydon&lt;/a&gt;, whom at the time was using GitHub Pages and Jekyll, about some advice on how to get started. He gave me some pointers, but also told me he wanted to build his own version of Jekyll, with his opinions on how such a tool should work, using &lt;a href="http://nancyfx.org"&gt;Nancy&lt;/a&gt; - obviously this was something I had to use!&lt;/p&gt;

&lt;p&gt;Phillip started hacking on his tool and with the help of &lt;a href="http://jonathanchannon.com"&gt;Jonathan Channon&lt;/a&gt; he ended up creating &lt;a href="https://github.com/sandra/sandra.snow"&gt;Sandra.Snow&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The ReadMe file, in the repository, describes Sandra.Snow as&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sandra.Snow is a Jekyll inspired static site generation tool that can be run locally, as a CAAS(Compiler as a Service) or setup with Azure to build your site when your repository changes. It is built on top of NancyFX.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have been working on building a blog, using Sandra.Snow, for a while now and you are looking at the result. The reason it took me a while was a combination of me wanting to create my own design (responsive, clean, semantic HTML and so on) and the lack of willpower to get it done with. Happy to say that I am at least happy enough to put it out now, even though I still have some finishing touches I would like to sort out in the coming weeks (hopefully you will not notice them the same way I do).&lt;/p&gt;

&lt;p&gt;After much consideration, I have decided not to convert my entire backlog (I got a data backup from Posterous before they shutdown) to the new blog, but instead I will be cherry-picking posts that I'll convert. I simply see no point to convert post that I feel are out dates and that does not add any value any longer.&lt;/p&gt;
</a10:content></item></channel></rss>