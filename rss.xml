<rss xmlns:a10="http://www.w3.org/2005/Atom" version="2.0"><channel><title>TheCodeJunkie</title><link>http://thecodejunkie.com/rss.xml</link><description>TheCodeJunkie</description><item><guid isPermaLink="true">http://thecodejunkie.com/2014/01/28/keyboard-shortcuts-for-taking-a-screenshot-on-osx/</guid><link>http://thecodejunkie.com/2014/01/28/keyboard-shortcuts-for-taking-a-screenshot-on-osx/</link><title>Keyboard shortcuts for taking a screenshot on OS X</title><description>&lt;p&gt;OS X comes with some really nice keyboard shortcuts to take screenshots. The problem is that I keep forgetting exactly which shortcut does. So for the purpose of having a place to look them up the next time I forget - here they are&lt;/p&gt;

</description><pubDate>Mon, 27 Jan 2014 23:00:00 Z</pubDate><a10:updated>2014-01-27T23:00:00Z</a10:updated><a10:content type="text">&lt;p&gt;OS X comes with some really nice keyboard shortcuts to take screenshots. The problem is that I keep forgetting exactly which shortcut does. So for the purpose of having a place to look them up the next time I forget - here they are&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;Saving to a file on the desktop&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-3&lt;/kbd&gt;: Take a screenshot of the screen&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then select an area: Take a screenshot of an area&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then &lt;kbd&gt;Space&lt;/kbd&gt;, then click a window: Take a screenshot of a window&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Saving to the clipboard&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-3&lt;/kbd&gt;: Take a screenshot of the screen&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then select an area: Take a screenshot of an area&lt;/li&gt;
&lt;li&gt;&lt;kbd&gt;&amp;#8984;&lt;/kbd&gt;-&lt;kbd&gt;Ctrl&lt;/kbd&gt;-&lt;kbd&gt;Shift&lt;/kbd&gt;-&lt;kbd&gt;-4&lt;/kbd&gt;, then &lt;kbd&gt;Space&lt;/kbd&gt;, then click a window: Take a screenshot of a window&lt;/li&gt;
&lt;/ul&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37/</guid><link>http://thecodejunkie.com/2014/01/27/a-full-day-of-open-source-at-tretton37/</link><title>A full day of open-source at tretton37</title><description>&lt;p&gt;What do you get when you take 50 developers, 12 open-source projects and a full day of coding? You get a &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; team knowledge day, with focus on contributing to open-source projects!&lt;/p&gt;

&lt;p&gt;It is not often that I blog about my work, but this is just so awesome that it had to be shared. So, about once per quarter we try and organize a company knowledge day, where we take everyone off their billable assignments and cuddle up at our office for a full day of awesome.&lt;/p&gt;

</description><pubDate>Sun, 26 Jan 2014 23:00:00 Z</pubDate><a10:updated>2014-01-26T23:00:00Z</a10:updated><a10:content type="text">&lt;p&gt;What do you get when you take 50 developers, 12 open-source projects and a full day of coding? You get a &lt;a href="http://tretton37.com"&gt;tretton37&lt;/a&gt; team knowledge day, with focus on contributing to open-source projects!&lt;/p&gt;

&lt;p&gt;It is not often that I blog about my work, but this is just so awesome that it had to be shared. So, about once per quarter we try and organize a company knowledge day, where we take everyone off their billable assignments and cuddle up at our office for a full day of awesome.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;This time (the event will take place 4 days after I've posted this) we decided that we should spend the day working on various open-source projects, by sending them some pull-requests!&lt;/p&gt;

&lt;p&gt;We &lt;i class="icon-heart"&gt;&lt;/i&gt; open-source and it felt like the right thing for us to do. All of us use various open-source projects in our daily work so it is nice that we, as a company, get to contribute something back (of course many of us send our pull-request otherwise as well!).&lt;/p&gt;

&lt;p&gt;Because we want to maximize the amount of time we can spent coding, we have chosen all the project up-front and divided us into teams.&lt;/p&gt;

&lt;p&gt;The projects that was suggested, and ultimately picked, where&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/NancyFx/Nancy"&gt;NancyFx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/SignalR/SignalR"&gt;SignalR&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/scriptcs/scriptcs"&gt;ScriptCS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/Glimpse/Glimpse"&gt;Glimpse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ninject/ninject"&gt;Ninject&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/angular/angular.js"&gt;AngularJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/wycats/handlebars.js"&gt;Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/knockout/knockout"&gt;KnockoutJS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/MiniProfiler/dotnet"&gt;MiniProfiler&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://code.google.com/p/elmah"&gt;Elmah&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://templatehub.codeplex.com"&gt;Template Hub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://caliburnmicro.codeplex.com"&gt;Caliburn.Micro&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(Nope, I won't be on Team Nancy!)&lt;/p&gt;

&lt;p&gt;I really hope that all teams get the opportunity to send in at least one pull-request each. Of course, what would be really awesome is if we managed to fire of a couple of them for each project!&lt;/p&gt;

&lt;p&gt;Can't wait to get started! Wouldn't it be awesome if you could organize something similar where you work? C'mon!&lt;/p&gt;

&lt;p&gt;Keep an eye on our Twitter stream &lt;a href="http://twitter.com/tretton37"&gt;@tretton37&lt;/a&gt; for updates during our knowledge day.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2014/01/20/copying-virtual-machines-between-azure-subscriptions/</guid><link>http://thecodejunkie.com/2014/01/20/copying-virtual-machines-between-azure-subscriptions/</link><title>Copying virtual machines between Azure subscriptions</title><description>&lt;p&gt;I recently found myself in the need to copy a couple of Azure Virtual Machines from one subscription to another. Not having used Azure that much before, I figured there must be support to perform this kind of migration from inside the Azure portal itself.&lt;/p&gt;

&lt;p&gt;Turns out there isn't, but that does not mean it is impossible, or even hard for that matter. Once you figure it out, it is actually quite frictionless and smooth.&lt;/p&gt;

</description><pubDate>Sun, 19 Jan 2014 23:00:00 Z</pubDate><a10:updated>2014-01-19T23:00:00Z</a10:updated><a10:content type="text">&lt;p&gt;I recently found myself in the need to copy a couple of Azure Virtual Machines from one subscription to another. Not having used Azure that much before, I figured there must be support to perform this kind of migration from inside the Azure portal itself.&lt;/p&gt;

&lt;p&gt;Turns out there isn't, but that does not mean it is impossible, or even hard for that matter. Once you figure it out, it is actually quite frictionless and smooth.&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;The easy and, as it turns out, slow way it to go to the Azure Portal, click &lt;strong&gt;Storage&lt;/strong&gt;, then the name of your storage, followed by &lt;strong&gt;Containers&lt;/strong&gt; at the top. You should now see a container called &lt;strong&gt;Vhds&lt;/strong&gt;. Clicking that will list all of the VHD file you have on your subscription.&lt;/p&gt;

&lt;p&gt;By selecting one of the files the then clicking the &lt;strong&gt;Download&lt;/strong&gt; button, at the bottom of the page, Azure will start a file download straight in the browser. I am on a 100 mbit connection and I was only getting around 4MB/s on average.&lt;/p&gt;

&lt;p&gt;Normally that is a pretty OK download speed, but I was looking to transfer two VHD files that totalled at 150GB of data. Needless to say it would take quite a while to complete so I needed another solution.&lt;/p&gt;

&lt;h2&gt;Blob Service REST API&lt;/h2&gt;

&lt;p&gt;Microsoft was nice enough to create a nice &lt;a href="http://msdn.microsoft.com/en-us/library/windowsazure/dd135733.aspx"&gt;Blob Service REST API&lt;/a&gt; that you can use to programatically access the content of your containers.&lt;/p&gt;

&lt;p&gt;To do this, the API uses the concept of access keys. If you have the name and access key to a storage, then you can use that to access the files that are stored in it.&lt;/p&gt;

&lt;p&gt;You find your keys by going to the Azure Portal, click on &lt;strong&gt;Storage&lt;/strong&gt; then &lt;strong&gt;Manage Access Keys&lt;/strong&gt; at the bottom of the page. There are two keys, the primary and the secondary. Both do the same thing, but Azure gives you a convinent way to have a personal key and a key you give to services etc. that you wish to gain access to your storage.&lt;/p&gt;

&lt;p&gt;At anytime you can regenerate theys keys if you feel they've been compromised or if you have given them to some service and you no longer wish them to be valid. Just click the &lt;strong&gt;Regenerate&lt;/strong&gt; button next to the key you wish to create a new one for.&lt;/p&gt;

&lt;h2&gt;AzCopy to the rescue&lt;/h2&gt;

&lt;p&gt;I tried a couple of different tools, that uses the Blob Service REST API, but they all suffered from the same problem as the browser download option - speed.&lt;/p&gt;

&lt;p&gt;Then &lt;a href="http://twitter.com/avidebbo"&gt;David Ebbo&lt;/a&gt; pointed me to the &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2013/04/01/azcopy-using-cross-account-copy-blob.aspx"&gt;AzCopy&lt;/a&gt;. David works on Windows Azure Web Sites and he told me they uses that tool to copy things across blob stores.&lt;/p&gt;

&lt;p&gt;It just so happened that as of CTP2, AzCopy supports the &lt;a href="http://blogs.msdn.com/b/windowsazurestorage/archive/2013/04/01/azcopy-using-cross-account-copy-blob.aspx"&gt;Asynchronous Cross-Account Copy Blob&lt;/a&gt; feature of the Blob Service REST API.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;NOTE: To use this feature, your storage account must have been created after June 7th 2012. Read more about this limitaion on the previous link&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What this enables you to do is to copy from one store to another, without the need to first copying the data locally. This drastically improved the transfer speed. Using AzCopy I was getting speeds at around 45MB/s instead of 4MB/s!&lt;/p&gt;

&lt;p&gt;I ended up using the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AzCopy
https://&amp;lt;sourceaccount&amp;gt;.blob.core.windows.net/&amp;lt;sourcecontainer&amp;gt;/ 
https://&amp;lt;destaccount&amp;gt;.blob.core.windows.net/&amp;lt;destcontainer&amp;gt;/
/sourcekey:&amp;lt;key&amp;gt;
/destkey:&amp;lt;key&amp;gt;
/S
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and it worked great!&lt;/p&gt;

&lt;h2&gt;A word of caution on Azure Disks vs Images&lt;/h2&gt;

&lt;p&gt;After I had copied the VHD files to my second subscription, I set out to re-create my virtual machines. This is where I messed up a bit. I went into &lt;strong&gt;Virtual Machines&lt;/strong&gt; and then &lt;strong&gt;Images&lt;/strong&gt; where I created images of the VHD files. What I should have done is gone into &lt;strong&gt;Virtual Machines&lt;/strong&gt; followed by &lt;strong&gt;Disks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The difference between the two is that images are like templates. You use them to create a completley new VHD file, based on the image, that you then use as a disk for your virtual machine.&lt;/p&gt;

&lt;p&gt;Since I was copying existing machines across, I just needed to create disks directly, that I then used to create my virtual machines from. &lt;/p&gt;

&lt;p&gt;When I created a virtual machine from one of the images, it worked fine (I could login to the machine), except for Azure getting stuck while provisioning my machine. So even though the machine was functional, it was not sitting quite right with Azure. Once I changed to use a disk, it immediatly behaved as I expected.&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/12/13/community-maintained-nancy-fsharp-templates-for-visual-studio/</guid><link>http://thecodejunkie.com/2013/12/13/community-maintained-nancy-fsharp-templates-for-visual-studio/</link><title>Community maintained Nancy F# templates for Visual Studio</title><description>&lt;p&gt;Not too long ago, I posted about the &lt;a href="/2013/11/15/On-the-Nancy-templates-for-Visual-Studio"&gt;Visual Studio templates for Nancy&lt;/a&gt; and how we had taken the (tough) decision to only maintain C# templates outselves. Not because we do not see value in supporting other languages, but solely because of the shear amount of work that is required to maintain a single template.&lt;/p&gt;

&lt;p&gt;Maintaining 9 templates (as we do with out C# templates) is a time consuming process, and the time required to support additional templates scales linear to the amount of templates we add.&lt;/p&gt;

&lt;p&gt;We reached out the authors of the VB.NET templates and F# templates, as well as our community, and ask them to maintain the templates themselves. I didn't take long for the F# community to step up to the plate...&lt;/p&gt;

</description><pubDate>Thu, 12 Dec 2013 23:00:00 Z</pubDate><a10:updated>2013-12-12T23:00:00Z</a10:updated><a10:content type="text">&lt;p&gt;Not too long ago, I posted about the &lt;a href="/2013/11/15/On-the-Nancy-templates-for-Visual-Studio"&gt;Visual Studio templates for Nancy&lt;/a&gt; and how we had taken the (tough) decision to only maintain C# templates outselves. Not because we do not see value in supporting other languages, but solely because of the shear amount of work that is required to maintain a single template.&lt;/p&gt;

&lt;p&gt;Maintaining 9 templates (as we do with out C# templates) is a time consuming process, and the time required to support additional templates scales linear to the amount of templates we add.&lt;/p&gt;

&lt;p&gt;We reached out the authors of the VB.NET templates and F# templates, as well as our community, and ask them to maintain the templates themselves. I didn't take long for the F# community to step up to the plate...&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;p&gt;&lt;a href="http://wizardsofsmart.net/"&gt;Ryan Riley&lt;/a&gt; (&lt;a href="http://twitter.com/panesofglass"&gt;@panesofglass&lt;/a&gt; on Twitter) and &lt;a href="http://blog.danielmohl.com/"&gt;Daniel Mohl&lt;/a&gt; (&lt;a href="http://twitter.com/dmohl"&gt;@dmohl&lt;/a&gt; on Twitter) took the templates and creates their own VSIX extension with their F# templates&lt;/p&gt;

&lt;p&gt;&lt;img src="/img/nancy.fsharp.templates.for.visual.studio.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;The templates can be found at &lt;a href="http://visualstudiogallery.msdn.microsoft.com/b55b8aac-b11a-4a6a-8a77-2153f46f4e2f"&gt;F# Nancy Template&lt;/a&gt; on the Visual Studio Gallery.&lt;/p&gt;

&lt;p&gt;For more informatation, head over to &lt;a href="http://bloggemdano.blogspot.se/2013/12/a-few-other-template-additions-and.html"&gt;Daniel's blog&lt;/a&gt;&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/11/15/on-the-nancy-templates-for-visual-studio/</guid><link>http://thecodejunkie.com/2013/11/15/on-the-nancy-templates-for-visual-studio/</link><title>On the Nancy templates for Visual Studio</title><description>&lt;p&gt;A while back we introduced Nancy templates for Visual Studio, which gave you the ability to create a new Nancy project that has Nancy added out-of-the-box. This meant no more creating an empty ASP.NET web application, removing all those pesky project references and installing the Nancy nugets, just to get up and running.&lt;/p&gt;

&lt;p&gt;Unfortunately we have not been able to update these template with every new release of Nancy, which means you have had to update the Nancy Nugets to make sure you where using the latest build. &lt;/p&gt;

&lt;p&gt;Believe me when I tell you that this has not been out of laziness, but rather the instinct to survive, but hopefully we've taken a couple of important decisions to remedy this in the future&lt;/p&gt;

</description><pubDate>Thu, 14 Nov 2013 23:00:00 Z</pubDate><a10:updated>2013-11-14T23:00:00Z</a10:updated><a10:content type="text">&lt;p&gt;A while back we introduced Nancy templates for Visual Studio, which gave you the ability to create a new Nancy project that has Nancy added out-of-the-box. This meant no more creating an empty ASP.NET web application, removing all those pesky project references and installing the Nancy nugets, just to get up and running.&lt;/p&gt;

&lt;p&gt;Unfortunately we have not been able to update these template with every new release of Nancy, which means you have had to update the Nancy Nugets to make sure you where using the latest build. &lt;/p&gt;

&lt;p&gt;Believe me when I tell you that this has not been out of laziness, but rather the instinct to survive, but hopefully we've taken a couple of important decisions to remedy this in the future&lt;/p&gt;

&lt;!--excerpt--&gt;

&lt;h2&gt;So what does it take to create a template (with Nuget support)?&lt;/h2&gt;

&lt;p&gt;As it turns out, quite a lot actually. It definitely takes a lot more than I anticipated and it is quite obvious that that tooling was not created for performing anything else than trivial template tasks.&lt;/p&gt;

&lt;p&gt;Here is basically the steps we have to do extract the template from the projects&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start Visual Studio and load the solution&lt;/li&gt;
&lt;li&gt;File -&gt; Export Template&lt;/li&gt;
&lt;li&gt;Make sure "Project Template" is selected on the first page of the Wizard + select the correct project in the drop-down&lt;/li&gt;
&lt;li&gt;Fill out template name, description, icon and preview image (either use the Browse button or copy/paste the path)&lt;/li&gt;
&lt;li&gt;Export the template to the default (non-changeable) location&lt;/li&gt;
&lt;li&gt;Go the output location&lt;/li&gt;
&lt;li&gt;Break open the zip file&lt;/li&gt;
&lt;li&gt;Open the MyTemplate.vstemplate file (yes, they all get this name when you export)&lt;/li&gt;
&lt;li&gt;Modify the "DefaultName" element&lt;/li&gt;
&lt;li&gt;Modify all .cs files and so that the namespace declarations (and other things you need to like assembly name etc) so it uses the $safeprojectname$ placeholder&lt;/li&gt;
&lt;li&gt;Insert the &lt;package&gt; node (and sub-nodes), which contains information on which Nuget packages to install + versions&lt;/li&gt;
&lt;li&gt;Zip up the content again (making sure you get the folder structure right)&lt;/li&gt;
&lt;li&gt;Copy the zip to the right location in our VSIX project (ProjectTemplates\CSharp\Web)&lt;/li&gt;
&lt;li&gt;Go back into visual studio, include the zip in the project, edit it's build action to "content" and configure it to be included in the VSI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We have to repeat these things for each and everyone of the templates we ship. We currently have 9 C# templates and that is already quite a work load to do for each new release of Nancy we put out.&lt;/p&gt;

&lt;p&gt;If that was not enough, the awesome &lt;a href="http://wizardsofsmart.net/"&gt;Ryan Riley&lt;/a&gt; (&lt;a href="http://twitter.com/panesofglass"&gt;@panesofglass&lt;/a&gt; on Twitter) and &lt;a href="http://blogs.lessthandot.com/index.php/All/?disp=authdir&amp;amp;author=7"&gt;Christiaan Baes&lt;/a&gt; (&lt;a href="http://twitter.com/chrissie1"&gt;@chrissie1&lt;/a&gt; on Twitter) send us pull-requests for adding F# and VB.NET templates.&lt;/p&gt;

&lt;p&gt;This pushed the number of template count a bit into the 20's and this is pretty much where our work efforts kept coming to a grinding halt. The sheer amount of work required to get these new templates out is what made me start (and abandon) the work several times.&lt;/p&gt;

&lt;p&gt;Yesterday, me and &lt;a href="http://twitter.com/grumpydev"&gt;@grumpydev&lt;/a&gt; took the decision to only support the C# templates moving forward. We really appreciate the work put in by Ryan and Christiaan, but we came to the conclusion that the vast majority of our users are C# users and the added workload could not justify us supporting F# and VB.NET.&lt;/p&gt;

&lt;p&gt;That said, we would really like to thank Ryan and Christiaan for their work and support and would like to encourage them to either support the templates themselves, or see someone else in the community step up and do it for them (or why not team up with them if these templates are in your interest?)&lt;/p&gt;

&lt;h2&gt;Moving forward&lt;/h2&gt;

&lt;p&gt;By deciding to only focus on the C# templates, we reduce our workload by a huge chunk moving forward and thanks to the awesome &lt;a href="http://devlead.se"&gt;Mattias Karlsson&lt;/a&gt; (&lt;a href="http://twitter.com/devload"&gt;@devlead&lt;/a&gt; on Twitter), whom sent us a pull-request last night with the C# templates updated to 0.22.1, we expect to have these in your Visual Studio any day now!&lt;/p&gt;

&lt;p&gt;We have also decided to look into the &lt;a href="http://sidewaffle.com/"&gt;Sidewaffle&lt;/a&gt; project as an alternative to the VSIX distribution. If anyone would like to offer their Sidewaffle expertise or just help out, please let us know&lt;/p&gt;

&lt;p&gt;Thanks for your patience!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/11/14/i-created-the-github-expandinizer-extension-for-google-chrome/</guid><link>http://thecodejunkie.com/2013/11/14/i-created-the-github-expandinizer-extension-for-google-chrome/</link><title>I created the Github.Expandinizr extension for Google Chrome</title><description>&lt;p&gt;&lt;img src="/img/github.expandinizer.logo.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;A while back when &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; updated the design of their web page, they introduces a change that has annoyed a lot of people; they decided to truncate the file/folder name in the repository browser. This makes it impossible to distinguish files/folders that follow a naming conventions, such as namespace hierarchies.&lt;/p&gt;

</description><pubDate>Wed, 13 Nov 2013 23:00:00 Z</pubDate><a10:updated>2013-11-13T23:00:00Z</a10:updated><a10:content type="text">&lt;p&gt;&lt;img src="/img/github.expandinizer.logo.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;A while back when &lt;a href="https://github.com"&gt;GitHub&lt;/a&gt; updated the design of their web page, they introduces a change that has annoyed a lot of people; they decided to truncate the file/folder name in the repository browser. This makes it impossible to distinguish files/folders that follow a naming conventions, such as namespace hierarchies.&lt;/p&gt;

&lt;!--excerpt--&gt; 

&lt;p&gt;What I did was create a very simple Google Chrome extension, called &lt;a href="https://chrome.google.com/webstore/detail/githubexpandinizr/cbehdjjcilgnejbpnjhobkiiggkedfib"&gt;GitHub.Expandinizr&lt;/a&gt; which &lt;em&gt;kinda&lt;/em&gt; solves the problem. I say kinda, because it is a quick hack really and it was not designed to be prefect. That said, if you can improve it, then please send a pull-request, you can find the source at &lt;a href="https://github.com/thecodejunkie/github.expandinizr"&gt;github.com/thecodejunkie/github.expandinizr&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So what does it do? All it really does is that when it detects that you are browsing github.com, it will inject a single css class into the page to remove the ellipsis from the file/folder name.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;.css-truncate.css-truncate-target {
    display: inline !important;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This css class is usually sets the &lt;code&gt;display&lt;/code&gt; property to &lt;code&gt;inline-block&lt;/code&gt; with an added &lt;code&gt;text-overflow&lt;/code&gt; that has been set to &lt;code&gt;ellipsis&lt;/code&gt;. By changing the display we prevent it, in a rather crude way, to ellipsis the text. Notice that the css declaration has been marked as &lt;code&gt;!important&lt;/code&gt; which will ensure it gets higher priority than the one in the GitHub css declaration.&lt;/p&gt;

&lt;h2&gt;Known issues&lt;/h2&gt;

&lt;p&gt;Like I said, this is a hack. If the un-ellipsed text becomes too long, then it could cause the new width of the repository browser to push into other page elements, such as the sidebar navigation on the right hand side of the design. This is especially noticeable on the main page of the repository browser, since the sidebar is expanded and takes up much more horizontal space, than when it has been collapsed.&lt;/p&gt;

&lt;p&gt;I've fine with this, so at present I am not going to spend any time trying to figure out an alternative approach, that resolves this issues (I spend 10 minutes on it and got a decent result, but it caused other problems). But, like I said, if you come up with a better solution, send me a pull-request with an updated &lt;a href="https://github.com/thecodejunkie/github.expandinizr/blob/master/ext/content/inject.css"&gt;inject.css&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;All-in-all&lt;/h2&gt;

&lt;p&gt;This was a fun learning experience. It was the first time that I created a proper Chrome Extension and it was certainly the first time I published it in the Chrome Store. Who knew it cost $5 to become a publisher in the store? Now I know!&lt;/p&gt;
</a10:content></item><item><guid isPermaLink="true">http://thecodejunkie.com/2013/09/10/i-am-back-and-this-time-i-am-taking-control/</guid><link>http://thecodejunkie.com/2013/09/10/i-am-back-and-this-time-i-am-taking-control/</link><title>I am back and this time I am taking control</title><description>&lt;p&gt;When Posterous closed down on April 30th 2012, they took my blog with them. I made sure I downloaded my content before the service shut down but did not make any effort in relocating. Why? I had gotten to the point where I thought there was something inherently wrong with the way that blogging services and blog engines work.&lt;/p&gt;

&lt;p&gt;A blog, in its purest form, is nothing but information with a bit of formatting, added to make it look nice, yet each service (and engine) seem to have need to mangle the content. They do this by either converting your data into HTML, thus losing the initial separation of content and formatting, and/or store it in a proprietary format. Either way, as soon as you have handed over your post, you are no longer in control and that bugs me.&lt;/p&gt;

&lt;p&gt;Looking around for options on how to solve this, I got more and more keen on the idea of using &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, that lets you write your posts using Markdown and then automatically convert them to static pages using &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The things that really appealed to me were&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I would get to write my content in a very neutral markup language&lt;/li&gt;
&lt;li&gt;I could store my posts in a normal Git repository&lt;/li&gt;
&lt;li&gt;The pages would be static and there would be no need for databases or other software to run it&lt;/li&gt;
&lt;/ul&gt;

</description><pubDate>Mon, 09 Sep 2013 22:00:00 Z</pubDate><a10:updated>2013-09-09T22:00:00Z</a10:updated><a10:content type="text">&lt;p&gt;When Posterous closed down on April 30th 2012, they took my blog with them. I made sure I downloaded my content before the service shut down but did not make any effort in relocating. Why? I had gotten to the point where I thought there was something inherently wrong with the way that blogging services and blog engines work.&lt;/p&gt;

&lt;p&gt;A blog, in its purest form, is nothing but information with a bit of formatting, added to make it look nice, yet each service (and engine) seem to have need to mangle the content. They do this by either converting your data into HTML, thus losing the initial separation of content and formatting, and/or store it in a proprietary format. Either way, as soon as you have handed over your post, you are no longer in control and that bugs me.&lt;/p&gt;

&lt;p&gt;Looking around for options on how to solve this, I got more and more keen on the idea of using &lt;a href="http://pages.github.com/"&gt;GitHub Pages&lt;/a&gt;, that lets you write your posts using Markdown and then automatically convert them to static pages using &lt;a href="http://jekyllrb.com/"&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The things that really appealed to me were&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I would get to write my content in a very neutral markup language&lt;/li&gt;
&lt;li&gt;I could store my posts in a normal Git repository&lt;/li&gt;
&lt;li&gt;The pages would be static and there would be no need for databases or other software to run it&lt;/li&gt;
&lt;/ul&gt;

&lt;!--excerpt--&gt; 

&lt;p&gt;While looking into this, I asked &lt;a href="http://philliphaydon.com"&gt;Phillip Haydon&lt;/a&gt;, whom at the time was using GitHub Pages and Jekyll, about some advice on how to get started. He gave me some pointers, but also told me he wanted to build his own version of Jekyll, with his opinions on how such a tool should work, using &lt;a href="http://nancyfx.org"&gt;Nancy&lt;/a&gt; - obviously this was something I had to use!&lt;/p&gt;

&lt;p&gt;Phillip started hacking on his tool and with the help of &lt;a href="http://jonathanchannon.com"&gt;Jonathan Channon&lt;/a&gt; he ended up creating &lt;a href="https://github.com/sandra/sandra.snow"&gt;Sandra.Snow&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The ReadMe file, in the repository, describes Sandra.Snow as&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sandra.Snow is a Jekyll inspired static site generation tool that can be run locally, as a CAAS(Compiler as a Service) or setup with Azure to build your site when your repository changes. It is built on top of NancyFX.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I have been working on building a blog, using Sandra.Snow, for a while now and you are looking at the result. The reason it took me a while was a combination of me wanting to create my own design (responsive, clean, semantic HTML and so on) and the lack of willpower to get it done with. Happy to say that I am at least happy enough to put it out now, even though I still have some finishing touches I would like to sort out in the coming weeks (hopefully you will not notice them the same way I do).&lt;/p&gt;

&lt;p&gt;After much consideration, I have decided not to convert my entire backlog (I got a data backup from Posterous before they shutdown) to the new blog, but instead I will be cherry-picking posts that I'll convert. I simply see no point to convert post that I feel are out dates and that does not add any value any longer.&lt;/p&gt;
</a10:content></item></channel></rss>